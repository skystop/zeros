<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Leo&#39;s Space! – |渴望自由，崇尚光明|</title>
  
  <subtitle>...././.-../.-../---/--------....--.././...-/./.-./-.--/---/-././--------.......-</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.skys.top/"/>
  <updated>2019-12-09T01:57:58.580Z</updated>
  <id>https://blog.skys.top/</id>
  
  <author>
    <name>Zero&#39;s</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《寄生虫》</title>
    <link href="https://blog.skys.top/2019/12/08/ys-jishengchong/"/>
    <id>https://blog.skys.top/2019/12/08/ys-jishengchong/</id>
    <published>2019-12-07T16:00:00.000Z</published>
    <updated>2019-12-09T01:57:58.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/261BF77FA5FAC83DA97C39746DD14EE4" alt=""></h2><p>　　基宇（崔宇植 饰）出生在一个贫穷的家庭之中，和妹妹基婷（朴素丹 饰）以及父母在狭窄的地下室里过着相依为命的日子。一天，基宇的同学上门拜访，他告诉基宇，自己在一个有钱人家里给他们的女儿做家教，太太是一个头脑简单出手又阔绰的女人，因为自己要出国留学，所以将家教的职位暂时转交给基宇。<br>　　就这样，基宇来到了朴社长（李善均 饰）家中，并且见到了他的太太（赵汝贞 饰），没过多久，基宇的妹妹和父母也如同寄生虫一般的进入了朴社长家里工作。然而，他们的野心并没有止步于此，基宇更是和大小姐坠入了爱河。随着时间的推移，朴社长家里隐藏的秘密渐渐浮出了水面。<br><a href="https://movie.douban.com/subject/27010768/" target="_blank" rel="noopener">https://movie.douban.com/subject/27010768/</a>  </p><blockquote><p>初看这个名字时，可能有人会很容易和《寄生兽》弄混，实际是完全不同类型的2个片子。<br>本片不错，《寄生兽》作为日本的一动画片也还是可以的。</p><p>“不是我带着这块石头，是这块石头死死地跟着我。”<br>“钱像熨斗，能把人熨平，没有一丝褶皱。如果有钱，我会比他们还善良。”</p><blockquote><p>一边是水淹陋室，一边是生日聚会。 一边是冰冷坚硬的体育馆，一边是豪华柔软的后花园。 钱就是熨斗，把一切都烫平了。 他们蹭网、住地下室、为了一份工作不择手段。 当你觉得他们已经够惨的时候，电影突然反转：他们还不是最惨的，还有更惨的。 你富，就一定有比你更富的；你穷，也一定有比你更穷的。 贫富差距就像无数面墙，将人分为了三六九等。 这面墙，任凭风吹日晒雨淋也岿然屹立，纹丝不动。 朴夫妇看起来傻乎乎的，可他们还是越来越有钱； 金基泽一家聪明过人，可还是翻不了身。 你以为找个好工作，有份好薪水，就摆脱了贫穷的身份，其实还差了十万八千里。 你能洗掉衣服的汗味，却洗不掉已经融入血液的地下室的气味。 你爬了十层楼、二十层楼，可能才刚刚到达别人的地下室。 他们是虫子，所以他们生活艰难； 他们是虫子，所以什么都杀不死他们。</p><blockquote><p>看完《寄生虫》，一直和大家一个想法，隐喻太明显，结果对了一下，发现大家的隐喻体系都不一样。这电影在我看来讲的就不是阶级的事。讲的是韩国自己。朴社长那家人，从头到尾都流露出两个字：美国。儿子的印第安控，女儿的外语老师，夫人时不时蹦出的英语和社长公司里的美国奖状。这一家象征着什么？别忘了，这一家是搬过来的，在搬过来之前有一户人家为了防止北边而修了地下室，那这个年代就能基本确定了。这和韩国史是对应的。我们还可以再来看一个细节，假装自己是美国留学回来的妹妹去应聘时，哼的歌是《独岛是我们的领土》。寄生虫，寄生的可不只是阶级，更多说的是韩国自己。</p></blockquote></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/261BF77FA5FAC83DA97C39746DD14EE4&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;　　基宇（崔宇植 饰）出
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="观影分享" scheme="https://blog.skys.top/tags/%E8%A7%82%E5%BD%B1%E5%88%86%E4%BA%AB/"/>
    
      <category term="影视分享" scheme="https://blog.skys.top/tags/%E5%BD%B1%E8%A7%86%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>《小丑 Joker》</title>
    <link href="https://blog.skys.top/2019/12/06/ys-jokerfilm/"/>
    <id>https://blog.skys.top/2019/12/06/ys-jokerfilm/</id>
    <published>2019-12-05T16:00:00.000Z</published>
    <updated>2019-12-09T01:57:58.581Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/0155284933AD4E78AC0B38D173D56EF3" alt=""></h2><p>　　电影《小丑》以同名DC漫画角色为基础，由华纳兄弟影业公司发行。本片的故事独立于DCEU之外，故事背景设置在20世纪80年代，讲述了一位生活陷入困境的脱口秀喜剧演员渐渐走向精神的崩溃，在哥谭市开始了疯狂的犯罪生涯，最终成为了蝙蝠侠的宿敌“小丑”的故事。<br>　　本片由《宿醉》的导演托德菲利普斯执导，他与编剧斯科特西尔弗一起撰写了编剧。杰昆菲尼克斯本片中饰演主人公“小丑”，其他的主演包括罗伯特德尼罗、莎姬贝兹、马克马龙等。<br><a href="https://movie.douban.com/subject/27119724/" target="_blank" rel="noopener">https://movie.douban.com/subject/27119724/</a>  </p><blockquote><p>这个电影初看完的第一感觉是和《V字仇杀队》有点像，一个是画着Joker妆容的小丑，一个是戴着匿名者面具的V。</p><blockquote><p>Joker在上节目前排演了准备自杀，到最后他明白了，所谓的上层人员至始至终只是把他当成一个玩笑（Joke），戏谑的对象，同时笔记本看到那句“<strong>我只希望我的死比我的人生更值得</strong>”，使他改变了主意，最后变成了一个象征。</p><blockquote><p>一个生活中的loser，人们眼中的笑话，永远被忽略，永远没有存在感。 路人欺负他，同事出卖他，主持人嘲笑他…… 所有人都不在乎他，把他当成空气。 他从来不知道自己是否真的存在过，他唯一的愿望就是他的死比他的人生更值得。 他不是小丑，人们却说他是没用的小丑； 他真正有病，人们又希望他假装没病。 于是，他决定再也不要做他人生命中的过客，他要做自己生命的主宰。 你说我是小丑，我就做小丑给你看。 谁出卖我，我就让他知道出卖我的下场； 谁把我当做笑话，我就让他再也笑不出来。 曾经他戴上面具，总想为他人带来欢笑； 如今他卸下伪装，只想活出自己的人生。 他是人们眼中的失败者，也成了另外一群人心目中的英雄。 他在世界舞台翩翩起舞，宛如一名艺术家。 以前他认为自己的生活是一出悲剧，现在他意识到，它是喜剧。<br>直到最后的最后，小丑的身份其实从某种程度上来说依旧是个迷。 </p></blockquote></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/0155284933AD4E78AC0B38D173D56EF3&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;　　电影《小丑》以同名D
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="观影分享" scheme="https://blog.skys.top/tags/%E8%A7%82%E5%BD%B1%E5%88%86%E4%BA%AB/"/>
    
      <category term="影视分享" scheme="https://blog.skys.top/tags/%E5%BD%B1%E8%A7%86%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>科学上网方式及实践</title>
    <link href="https://blog.skys.top/2019/06/16/security-net/"/>
    <id>https://blog.skys.top/2019/06/16/security-net/</id>
    <published>2019-06-15T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍主流方案及具体方法"><a href="#介绍主流方案及具体方法" class="headerlink" title="介绍主流方案及具体方法"></a>介绍主流方案及具体方法</h2><blockquote><p>前言：</p><blockquote><p>前段时间，国内搞hw，突然出现了大规模的封禁，自己使用了1年多的小鸡也被ban了，欲哭无泪。<br>借此契机，尝试了下新的科学上网方式，来让其起死回生而不至于白花钱浪费了，特此记录下。</p></blockquote></blockquote><hr><p>目前主流常用于科学上网的主要有以下几种方案：  </p><ul><li><p><del>shadowsocks</del>（简称ss、55）  </p></li><li><p><del>shadowsocksr</del>（简称ssr、酸酸乳等）  </p></li><li><p><del>v2ray</del>（简称v2）  </p></li></ul><p>上述的几种方案，最早出现的是ss，后续在ss的基础上出现了ssr，ssr是完全兼容ss。目前主流用的最多的还是ss和ssr，其中ssr相比ss相对安全一点。<br>v2相比前面2种方式支持的协议更多，功能更为全面，同时也是支持ss，但是与之相对的，配置繁琐等因而使用普及率没前两者广。  </p><a id="more"></a><p>下面介绍具体的安装及使用(均以ubuntu系统为例，其他大同小异)：  </p><h3 id="1、ss"><a href="#1、ss" class="headerlink" title="1、ss"></a>1、ss</h3><p><img src="/img/img_files/25BF52DCB60F88EDCBA0955691F3F3EE" alt=""></p><ul><li>1.1官方安装方式，项目链接主页<a href="https://github.com/shadowsocks" target="_blank" rel="noopener">shadowsocks github</a>，包含多个不同版本的如Android、Windows客户端等。<br>我们需要做的是在主机安装<a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="noopener">服务端</a>、安装比较简单，直接执行如下命令即可。  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-pip</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure></li></ul><p>等待上述命令完成即成功安装，如上是官方版本的安装方式，安装完成之后需要自己配置端口、密码、加密方式等设置文件启动。<br>具体的详细参数说明可以<a href="https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener">参考</a>，上述方式下比较推荐的是通过加载配置文件来启动。<br>创建/etc/shadowsocks.json文件，示例如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;my_server_ip&quot;,//服务器主机地址</span><br><span class="line">    &quot;server_port&quot;:8388,//服务器开放端口</span><br><span class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,//本地监听地址</span><br><span class="line">    &quot;local_port&quot;:1080,//本地监听端口</span><br><span class="line">    &quot;password&quot;:&quot;mypassword&quot;,//加密密码</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,//加密方式，类似的还有rc4等</span><br><span class="line">    &quot;fast_open&quot;: false//是否开启tcp加速</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>同时也是支持多用户配置的，示例配置文件如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;server&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">&quot;local_port&quot;:1080,</span><br><span class="line">&quot;port_password&quot;:</span><br><span class="line">&#123;</span><br><span class="line">&quot;8989&quot;: &quot;test01test&quot;,//端口、密码</span><br><span class="line">&quot;9001&quot;: &quot;test02test&quot;//端口、密码</span><br><span class="line">&#125;,</span><br><span class="line">&quot;timeout&quot;: 600,</span><br><span class="line">&quot;method&quot;: &quot;aes-256-cfb&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上述文件创建设置好之后，直接通过已经安装的ssserver启动即可，具体命令如下：  </p><ul><li><p>前台运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure></li><li><p>后台运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br><span class="line">ssserver -c /etc/shadowsocks.json -d stop</span><br></pre></td></tr></table></figure></li></ul><p>如想设置自动启动，自己加个开机启动项即可，可以直接在/etc/rc.local中添加上述启动命令。</p><ul><li>1.2小白一键安装方式<a href="https://github.com/teddysun/shadowsocks_install" target="_blank" rel="noopener">shadowsocks_install</a>，建议新手使用这种方式，免去各类配置操作。<br>直接下载对应的sh脚本，赋予权限直接运行即可，python版本的如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/teddysun/shadowsocks_install/blob/master/shadowsocks.sh</span><br><span class="line">chmod 755 ./shadowsocks.sh</span><br><span class="line">./shadowsocks.sh</span><br></pre></td></tr></table></figure></li></ul><p>直接根据脚本的提示一步步正常填写就行了，比较简单，在此不多说。</p><blockquote><p>原始作者及相关维护人员基本都退出了项目，相关的教程也都删了，后续应该是基本不会更新了。</p></blockquote><h3 id="2-ssr"><a href="#2-ssr" class="headerlink" title="2.ssr"></a>2.ssr</h3><p><img src="/img/img_files/655CDE01E5453A8FF71F96B8736FAC61" alt=""></p><ul><li>2.1项目链接<a href="https://github.com/shadowsocksrr/shadowsocksr" target="_blank" rel="noopener">shadowsocksr github</a>，最初的版本原作者迫于压力已经删了，很多资料都已经没了，同样也是包含windows、Android、mac等客户端。<br>ssr本质和ss是差不多的，只是在ss的基础上多了混淆和伪装，因而相对安全一点，相应的客户端是完全兼容ss的。<br>安装方式如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/shadowsocksr/shadowsocksr.git</span><br></pre></td></tr></table></figure></li></ul><p>拷贝代码库到本地，执行如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bash initcfg.sh</span><br><span class="line">//然后移动到shadowsocks目录</span><br><span class="line">python server.py -p 443 -k password -m aes-128-cfb -O auth_aes128_md5 -o tls1.2_ticket_auth_compatible</span><br><span class="line">//-h 可以看到对应的帮助信息</span><br></pre></td></tr></table></figure></p><p>同样也可以采用读取配置文件的方式，然后直接执行如下代码即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python server.py</span><br></pre></td></tr></table></figure></p><ul><li>后台运行、停止和监控日志<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./logrun.sh</span><br><span class="line">./stop.sh</span><br><span class="line">./tail.sh</span><br></pre></td></tr></table></figure></li></ul><p>关于各种混淆及协议方式的优劣对比，<a href="https://github.com/shadowsocksrr/shadowsocks-rss/blob/master/ssr.md" target="_blank" rel="noopener">建议参考</a>。<br>默认为<br>“protocol”:”auth_aes128_md5”<br>“obfs”:”tls1.2_ticket_auth_compatible”  </p><ul><li>2.2推荐使用一键安装的方式，方法同上面的ss的一键安装方式<a href="https://github.com/teddysun/shadowsocks_install" target="_blank" rel="noopener">shadowsocks_install</a>。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/teddysun/shadowsocks_install/blob/master/shadowsocksR.sh</span><br><span class="line">……</span><br></pre></td></tr></table></figure></li></ul><p>后续操作类似，按照步骤提示信息一步步填写信息就行，简单省事。</p><blockquote><p>上述ss和ssr的github项目有的默认分支设置的rm，切换成master主分支即可。<br>另外建议ss、ssr一般是建议使用常用端口如80、443，其他的可能被封的概率高些。</p></blockquote><h3 id="3、v2"><a href="#3、v2" class="headerlink" title="3、v2"></a>3、v2</h3><p><img src="/img/img_files/3857E0C28C9270C6A28F70F7C0A115BA" alt=""><br>重点介绍，因为相对复杂，前面2种配置都相对比较简单，只用简单设置就好。</p><ul><li>3.1<a href="https://www.v2ray.com/" target="_blank" rel="noopener">v2ray官网</a>|<a href="https://github.com/v2ray" target="_blank" rel="noopener">v2ray github</a><br>支持多种协议，V2Ray 可同时开启多个协议支持，包括 Socks、HTTP、Shadowsocks、VMess 等。每个协议可单独设置传输载体，比如 TCP、mKCP、WebSocket 等。<br>本例采用了相对复杂的web+tls+反代的方案，正常使用无特殊要求的话，采用其他相对简单的方案即可，此方案是为了保障即使在ip被ban的情况下依旧能够正常使用。<blockquote><p>正常情况下，被封的ip 少则几天多则几个月都是有可能解封恢复的。  </p></blockquote></li></ul><p>V2Ray 提供了一个在 Linux 中的自动化安装脚本。这个脚本会自动检测有没有安装过 V2Ray，如果没有，则进行完整的安装和配置；如果之前安装过 V2Ray，则只更新 V2Ray 二进制程序而不更新配置。<br>官方安装方式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure></p><p>此脚本会自动安装以下文件：</p><p>/usr/bin/v2ray/v2ray：V2Ray 程序；<br>/usr/bin/v2ray/v2ctl：V2Ray 工具；<br>/etc/v2ray/config.json：配置文件；<br>/usr/bin/v2ray/geoip.dat：IP 数据文件<br>/usr/bin/v2ray/geosite.dat：域名数据文件<br>此脚本会配置自动运行脚本。自动运行脚本会在系统重启之后，自动运行 V2Ray。目前自动运行脚本只支持带有 Systemd 的系统，以及 Debian / Ubuntu 全系列。</p><p>运行脚本位于系统的以下位置：</p><p>/etc/systemd/system/v2ray.service: Systemd<br>/etc/init.d/v2ray: SysV<br>脚本运行完成后，你需要：</p><p>编辑 /etc/v2ray/config.json 文件来配置你需要的代理方式；<br>运行 service v2ray start 来启动 V2Ray 进程；<br>之后可以使用 service v2ray start|stop|status|reload|restart|force-reload 控制 V2Ray 的运行。</p><p>卸载<br>其中 systemd 和 sysv 二选一，取决于你的系统。</p><p>#停用并卸载服务（systemd）：<br>systemctl stop v2ray<br>systemctl disable v2ray</p><p>#停用并卸载服务（sysv）：<br>service v2ray stop<br>update-rc.d -f v2ray remove<br>删除文件<br>rm -rf /etc/v2ray/<em>  #(配置文件)<br>rm -rf /usr/bin/v2ray/</em>  #(程序)<br>rm -rf /var/log/v2ray/*  #(日志)<br>rm -rf /lib/systemd/system/v2ray.service  #(systemd 启动项)<br>rm -rf /etc/init.d/v2ray  #(sysv 启动项)<br>Linux 服务端使用一键安装脚本安装后如何对软件进行完全卸载<br>参考：<a href="https://github.com/v2ray/v2ray-core/issues/187" target="_blank" rel="noopener">https://github.com/v2ray/v2ray-core/issues/187</a></p><p>对于的操作配置问题，官方文档都有详细的说明，在此不细说，下面介绍具体使用的方案时再说。</p><ul><li>3.2小白新手推荐一键安装方式，<a href="https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC" target="_blank" rel="noopener">详细介绍</a>，没什么特别多的说的，按照步骤一步步操作就行,如下图为一键脚本运行后生成的配置信息说明。<br><img src="/img/img_files/6AE38C0DAEEAB042B4217F4813748E55" alt=""><br><img src="/img/img_files/D62733390D0E902EE4BF11314BAA541A" alt=""></li><li>3.3WebSocket+TLS+Web+CDN 详细操作配置说明<br>主要包括以下几个步骤,v2ray 正常使用主要是通过2个配置，一个是服务器端的配置文件一个是客户端：<blockquote><p><strong>1</strong>.正常安装v2ray，参考上面的步骤正常安装即可，上述2种方式均可。<br><strong>2</strong>.使用WebSocket方案，服务器端配置文件信息如下（/etc/v2ray/config.json）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;inbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;port&quot;: 10000,//端口，自己定义修改</span><br><span class="line">      &quot;listen&quot;:&quot;127.0.0.1&quot;,//只监听 127.0.0.1，避免除本机外的机器探测到开放了 相应 端口</span><br><span class="line">      &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;clients&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;id&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,//uid 一个唯一值，可以自己生成相当于密码</span><br><span class="line">            &quot;alterId&quot;: 64</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;streamSettings&quot;: &#123;</span><br><span class="line">        &quot;network&quot;: &quot;ws&quot;,//WebSocket 简写ws</span><br><span class="line">        &quot;wsSettings&quot;: &#123;</span><br><span class="line">        &quot;path&quot;: &quot;/zero&quot;//伪装路径</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;outbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;protocol&quot;: &quot;freedom&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>大致配置上述参数即可，其他需要细节配置的部分可以参考官方说明如dns，ban ip等，总体来说，上述配置完成后就ok了。<br><strong>3</strong>.TLS 传输层安全 tls是证书认证机制，因此使用tls需要申请证书，在这的前提是得注册一个域名。域名有免费域名和收费域名，不多讲，网上有很多。然后证书有免费和收费证书，对于我们小鸡来说肯定是用免费的啦。一般都是用的Let’s Encrypt的证书，免费三个月可以无限免费续期。比较方便的可以使用宝塔面板（在此强烈推荐，后续的一些操作可以更直观便捷）里面去申请相应的证书也可以用acme.sh，本质都是一样的都是自动续期。<br>我这边因为后面用了cloudflare的免费CDN，因此使用的是cloudflare（后面简称cf）的证书。在此有一个需要注意的事项就是宝塔和cloudflare其中一个不要开强制跳转https，不然会存在问题，我这里使用的是cf的25年的证书，然后cf开强制https，宝塔不开，如下图：<br><img src="/img/img_files/06680E3D6CA53C1BC370CFC9F53AF64A" alt=""><br><img src="/img/img_files/1438EAD02FE916207D4FB518A61A62BB" alt=""><br><img src="/img/img_files/5221B44522A4944762CE919F7BCBDAAD" alt=""><br>有其他证书问题的，直接看官方说明照着操作就可以了，宝塔操作后会自动在配置文件中设置，如下图：<br><img src="/img/img_files/E48995E9EA2E45DDD3E6E79132B54C29" alt=""><br>我这里因为是用的nginx做为web服务器，还跑有其他的网站在机器上，因此主要是nginx相关的配置为主来进行说明的，其他的如caddy、apache等大同小异。<br>下面为一般常规操作的nginx服务器端配置，ssl证书就是自己正常申请的证书。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen  443 ssl;</span><br><span class="line">  ssl on;</span><br><span class="line">  ssl_certificate       /etc/v2ray/v2ray.crt;</span><br><span class="line">  ssl_certificate_key   /etc/v2ray/v2ray.key;</span><br><span class="line">  ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_ciphers           HIGH:!aNULL:!MD5;</span><br><span class="line">  server_name           mydomain.me;</span><br><span class="line">        location /zero &#123; # 与 V2Ray 配置中的 path 保持一致</span><br><span class="line">        proxy_redirect off;</span><br><span class="line">        proxy_pass http://127.0.0.1:10000;#假设WebSocket监听在环回地址的10000端口上</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line"></span><br><span class="line">        # Show realip in v2ray access.log</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>前面的tls证书等配置完成之后，剩下就是nginx配置反向代理，如上面的nginx配置部分，其中location、地址端口等与前面的服务器v2ray配置要保持一致。<br>在使用宝塔面板时，配置反向代理可以更为便捷,如下图，配置需要代理的目录目标url即可。<br><img src="/img/img_files/7FB3315813252D67AD9D058FBC5CC804" alt=""><br><img src="/img/img_files/3D8823B959FC12A542B02DD7657DFBBF" alt=""><br>上述所有步骤完成之后，服务器端的配置就已经都完成了。<br><strong>4</strong>.客户端的配置，客户端的配置因不同客户端界面等操作都不太一样，具体的操作有细微区别。<br>大致的一个配置文件信息如下，其中客户端主要要记住的是几个关键信息，是与服务器相对应：</p><blockquote><p>协议、服务器地址、端口、userid、alterid、传输协议、路径、底层传输安全<br>vmess、xxx.com、443、xxxx-xxxxx-xxx-xxx、64、ws、/zero、tls<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;inbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;port&quot;: 1080,//本地监听的端口</span><br><span class="line">      &quot;listen&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">      &quot;protocol&quot;: &quot;socks&quot;,</span><br><span class="line">      &quot;sniffing&quot;: &#123;</span><br><span class="line">        &quot;enabled&quot;: true,</span><br><span class="line">        &quot;destOverride&quot;: [&quot;http&quot;, &quot;tls&quot;]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;auth&quot;: &quot;noauth&quot;,</span><br><span class="line">        &quot;udp&quot;: false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;outbounds&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;protocol&quot;: &quot;vmess&quot;,</span><br><span class="line">      &quot;settings&quot;: &#123;</span><br><span class="line">        &quot;vnext&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;address&quot;: &quot;xxx.com&quot;,//自己的域名地址</span><br><span class="line">            &quot;port&quot;: 443,</span><br><span class="line">            &quot;users&quot;: [</span><br><span class="line">              &#123;</span><br><span class="line">                &quot;id&quot;: &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;,//需要和服务器保持一致</span><br><span class="line">                &quot;alterId&quot;: 64</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;streamSettings&quot;: &#123;</span><br><span class="line">        &quot;network&quot;: &quot;ws&quot;,</span><br><span class="line">        &quot;security&quot;: &quot;tls&quot;,</span><br><span class="line">        &quot;wsSettings&quot;: &#123;</span><br><span class="line">          &quot;path&quot;: &quot;/zero&quot;//需要和服务器保持一致</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote></blockquote><blockquote><p>常规使用的客户端，windows有v2rayN，mac有v2rayX，Android有v2rayNG等，ios有kitsunebi、Shadowrocket等等。<br><strong>5</strong>.CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。<br>本质就是通过CDN你的流量并不是直接到你自己的主机。依靠这个可以借助CDN解决你服务器被ban的访问的问题，开启CDN之后，实际上当你ping你的主机时，返回的就不是你主机的真实ip了。就比如说你的主机在美国洛杉矶、由于被ban，没法直接通过国内再去访问连接你的主机了。这是通过CDN就相当于是另外建立了一个桥梁，CDN运营商的服务器能够访问你在美国的服务器，然后你能够访问CDN，就间接的建立了连接，通过这种方式，其实你所有的流量都是在正常不过的网络请求而已。因而降低了被封的风险，当然同时也因此可能也牺牲了一些速度，但是总体来讲总比直接封了不能用了要强很多不是。<br>关于cdn的使用也比较简单了，在此使用的是cloudflare的服务，是可以免费添加几个网站的，具体2个步骤即可完成:修改dns添加域名解析，设置代理状态。<br><img src="/img/img_files/D2B5396E84EA6B3E94437E6933D33CF8" alt="">  </p></blockquote><hr><p>到此为止，目前主流的几种科学上网的方式都介绍完了。各有优劣，建议按需选择。<br>其实除此之外最简单的科学上网方式就是通过ssh客户端连接之后直接隧道设置转移规则转发就可以实现科学上网，无需在服务器端安装任何软件方便快捷。</p><hr><p>相关工具及参考链接：  </p><ul><li><a href="http://ping.pe/" target="_blank" rel="noopener">ping.pe</a><br>用于测试自己ip到各个不同节点的访问延迟情况等，国外全绿国内全红说明ip被ban了。<br>尤其需要注意的部分虚拟主机厂商初始分配的ip就可能是国内不可访问的，建议是前期就选好，避免后续的问题。  </li><li><a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">SwitchyOmega</a><br>算是浏览器比较好用的一个插件了，支持自己配置各种情景条件来判断什么走代理还是不走代理，并且可以自动更新<a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">gfwlist</a>特别方便。<br>另外常见的设置主要是通过对应的客户端启用代理服务器监听本地的1080端口，浏览器SOCKS5连接本地代理服务器实现科学上网。  </li><li><a href="https://www.jianshu.com/p/a15192345ec9" target="_blank" rel="noopener">免费顶级域名申请</a>、<a href="https://linuxfunk.com/post/v2ray-ws-tls-nginx%E5%AE%9E%E7%8E%B0%E5%8A%A0%E5%AF%86%E4%BC%A0%E8%BE%93/" target="_blank" rel="noopener">v2ray实现ws+tls+nginx加密传输</a>、<a href="https://233v2.com/post/6/" target="_blank" rel="noopener">Cloudflare 中转 V2Ray WebSocket</a>、<a href="https://eveaz.com/1094.html" target="_blank" rel="noopener">Cloudflare+V2Ray+Caddy+WebSocket+TLS</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍主流方案及具体方法&quot;&gt;&lt;a href=&quot;#介绍主流方案及具体方法&quot; class=&quot;headerlink&quot; title=&quot;介绍主流方案及具体方法&quot;&gt;&lt;/a&gt;介绍主流方案及具体方法&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;前言：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;前段时间，国内搞hw，突然出现了大规模的封禁，自己使用了1年多的小鸡也被ban了，欲哭无泪。&lt;br&gt;借此契机，尝试了下新的科学上网方式，来让其起死回生而不至于白花钱浪费了，特此记录下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;目前主流常用于科学上网的主要有以下几种方案：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;shadowsocks&lt;/del&gt;（简称ss、55）  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;shadowsocksr&lt;/del&gt;（简称ssr、酸酸乳等）  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;del&gt;v2ray&lt;/del&gt;（简称v2）  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述的几种方案，最早出现的是ss，后续在ss的基础上出现了ssr，ssr是完全兼容ss。目前主流用的最多的还是ss和ssr，其中ssr相比ss相对安全一点。&lt;br&gt;v2相比前面2种方式支持的协议更多，功能更为全面，同时也是支持ss，但是与之相对的，配置繁琐等因而使用普及率没前两者广。  &lt;/p&gt;
    
    </summary>
    
    
      <category term="科学上网" scheme="https://blog.skys.top/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
      <category term="v2ray" scheme="https://blog.skys.top/tags/v2ray/"/>
    
      <category term="nginx" scheme="https://blog.skys.top/tags/nginx/"/>
    
      <category term="shadowsocks" scheme="https://blog.skys.top/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Blogger to Markdown</title>
    <link href="https://blog.skys.top/2019/06/12/blog2md/"/>
    <id>https://blog.skys.top/2019/06/12/blog2md/</id>
    <published>2019-06-11T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="将WordPress文章转为Markdown格式发布"><a href="#将WordPress文章转为Markdown格式发布" class="headerlink" title="将WordPress文章转为Markdown格式发布"></a>将WordPress文章转为Markdown格式发布</h2><blockquote><p>很早前建了一个个人WordPress的博客，最开始是跑在一个闲置的Android手机上面，用于记录些个人信息之类的，一直未对外发布。<br>在新建了hexo博客之后，想着将之前的一些内容给搬运过来。但是呢原始文章都是WordPress自带的编辑器和在编辑器插件下写的，<br>本身带了各种的排版等，不能直接利用来重新发布。  </p></blockquote><p>就着上面的原因和偷懒的原则，因而有了这个项目的介绍，在实际的过程中省了一些事，但是同时也有一些问题：  </p><ul><li>项目介绍<br><a href="https://github.com/palaniraja/blog2md" target="_blank" rel="noopener">https://github.com/palaniraja/blog2md</a></li><li>具体操作  </li></ul><a id="more"></a>  <p>原始WordPress使用的hueman主题，本身来讲个人觉得还是蛮漂亮的，功能也比较强大。  </p><p><img src="/img/img_files/66C7DDCB0E98C181BDEDCD06464F76C2" width="800" height="450" div="" align="center"></p><ol><li>进入仪表盘后台，导出文章为xml文件，如下图：<br><img src="/img/img_files/B088DEED2C14BD5CE4E96753C898D03E" width="800" height="800" div="" align="center"><br>导出的文件中包含了文章的具体内容以及评论分类等信息。<br><img src="/img/img_files/371C9E53CDCE456CD056EB93361798F8" alt=""></li><li>将项目拷贝到本地，node执行对应的js代码即可，具体如下：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Usage: node index.js b|w &lt;BLOGGER BACKUP XML&gt; &lt;OUTPUT DIR&gt;</span><br><span class="line">node index.js w your-wordpress-backup-export.xml out</span><br><span class="line">#评论是作为单独的文件</span><br><span class="line">node index.js w your-wordpress-backup-export.xml out m</span><br><span class="line">#将评论合并到文章，主要是最后加上m参数，默认s参数是分割</span><br></pre></td></tr></table></figure></li></ol><p><img src="/img/img_files/6952BE263B054F9B5A7DBB5981E2F670" width="600" height="300" div="" align="center"><br>运行过程中，显示缺失什么安装什么就可以了。<br><img src="/img/img_files/FE81BCF5B8996CE4EA2F99CE69D670B7" width="600" height="150" div="" align="center"><br>正常运行后的结果如下：<br><img src="/img/img_files/309BFB495D084B97746753DB76247B6F" width="600" height="300" div="" align="center"><br>生成后的文件在out目录，中文标题的进行了转换。<br><img src="/img/img_files/E750CACA4A4061260F30B778A5EDF9C5" alt=""><br>生成后的文章md文件内容如下：<br><img src="/img/img_files/F939787DA20B1084DC5C08598CA66BA6" alt=""></p><ul><li>实际问题  </li></ul><ol><li>图片外链,如果使用的图床不在了或其他原因等需要在markdown中调整外链，不然会导致图片等无法正常显示。  </li><li>一些段落的格式丢失需要重新做下调整  </li><li>原始表格等格式丢失，需要根据markdown标签进行手动调整等<br>可能还有些其他的问题目前没发现的，但是大致整体的数据基本是完整迁移过来了。  </li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;将WordPress文章转为Markdown格式发布&quot;&gt;&lt;a href=&quot;#将WordPress文章转为Markdown格式发布&quot; class=&quot;headerlink&quot; title=&quot;将WordPress文章转为Markdown格式发布&quot;&gt;&lt;/a&gt;将WordPress文章转为Markdown格式发布&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;很早前建了一个个人WordPress的博客，最开始是跑在一个闲置的Android手机上面，用于记录些个人信息之类的，一直未对外发布。&lt;br&gt;在新建了hexo博客之后，想着将之前的一些内容给搬运过来。但是呢原始文章都是WordPress自带的编辑器和在编辑器插件下写的，&lt;br&gt;本身带了各种的排版等，不能直接利用来重新发布。  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就着上面的原因和偷懒的原则，因而有了这个项目的介绍，在实际的过程中省了一些事，但是同时也有一些问题：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目介绍&lt;br&gt;&lt;a href=&quot;https://github.com/palaniraja/blog2md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/palaniraja/blog2md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;具体操作  &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="wordpress" scheme="https://blog.skys.top/tags/wordpress/"/>
    
      <category term="blogger" scheme="https://blog.skys.top/tags/blogger/"/>
    
      <category term="markdown" scheme="https://blog.skys.top/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>网络刷粉、刷量如何实现的？</title>
    <link href="https://blog.skys.top/2019/04/29/shualiang/"/>
    <id>https://blog.skys.top/2019/04/29/shualiang/</id>
    <published>2019-04-28T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在社交网络上刷粉刷量，技术上是如何实现的？"><a href="#在社交网络上刷粉刷量，技术上是如何实现的？" class="headerlink" title="在社交网络上刷粉刷量，技术上是如何实现的？"></a>在社交网络上刷粉刷量，技术上是如何实现的？</h2><blockquote><p>有时候你看到高转发的微博，超多 10W+ 的文章，超高的粉丝关注，但好像留言互动却少的可怜，本文带你看看技术内的灰色产业。</p></blockquote><p>我们都知道很多社交网络可以刷粉，也可以刷阅读量。所以，我们经常会看到很多记者报道过这样的灰色产业链的新闻。<br>你也许很好奇，这些技术都是怎么实现的？</p><p><img src="/img/img_files/BC08BFB4222C104157C1DC0BE169864F" alt=""><br><a id="more"></a><br>在这个流程里，需要有下面三个准备：</p><h1 id="1、多个手机号"><a href="#1、多个手机号" class="headerlink" title="1、多个手机号"></a>1、多个手机号</h1><p>尽管早期注册只需要邮箱就可以，但现在账号注册都是需要绑定手机号的，所以手机号是必备的。</p><h1 id="2、多个-IP"><a href="#2、多个-IP" class="headerlink" title="2、多个 IP"></a>2、多个 IP</h1><p>因为很多社交网站都会有反垃圾的措施。共用同一个 IP，一定会被封号。</p><h1 id="3、模拟操作"><a href="#3、模拟操作" class="headerlink" title="3、模拟操作"></a>3、模拟操作</h1><p>因为我们的需求是个性化的。所以在这一步，可以封装出一些基本的操作，比如关注、发布动态、转发、阅读文章等。</p><h2 id="那么多手机号从哪弄？"><a href="#那么多手机号从哪弄？" class="headerlink" title="那么多手机号从哪弄？"></a>那么多手机号从哪弄？</h2><p>于是问题来了，从哪里弄这么多手机号？比如说 1 万个！</p><h3 id="虚拟手机号：被歧视的号码段"><a href="#虚拟手机号：被歧视的号码段" class="headerlink" title="虚拟手机号：被歧视的号码段"></a>虚拟手机号：被歧视的号码段</h3><p>我首先想到了虚拟手机号，因为虚拟卡号不限数量，其他号码段都需要绑定身份证。不过虚拟卡号有个最大的问题，就是“会被歧视”。在社交网络里，虚拟手机号注册的账号被封的概率远超其他账号，比如说以“170”开头的手机号。</p><h3 id="阿里小号：一个看似可行的解决方案"><a href="#阿里小号：一个看似可行的解决方案" class="headerlink" title="阿里小号：一个看似可行的解决方案"></a>阿里小号：一个看似可行的解决方案</h3><p>既然虚拟手机号容易被封，那怎样才能找到既不会被封，还便宜的号码呢？阿里小号是个选择。阿里小号的价格比较亲民，5 元 / 月。可以自己选择号码段，这些号码段很多都不是 170 号码段的。但是阿里小号有个问题，就是需要用身份证来绑定。</p><h3 id="国外号码，贵但价值明显"><a href="#国外号码，贵但价值明显" class="headerlink" title="国外号码，贵但价值明显"></a>国外号码，贵但价值明显</h3><p>那有没有既不会被封，又不用绑定身份证的办法呢？国外的手机号是可以的，但最大的问题就是贵，差不多 5 美金一个月，相当于一个账号就要 35 元。<br>我调查了一下，其实国外也有类似的刷量刷粉的操作，比如刷 Facebook、twiter、Youtube 等。这些网站刷粉、刷量的收费更高，所以相比之下，手机号带来的成本其实不算什么。<br>一般的做法都是先从高价值的网站开始刷，最后剩余的再刷国内的 APP，有任务的话，7X24 小时从不间断。<br>这些号码各有特点，根据实际情况，不同人手里用到的号码是不同的。我总结了一下。</p><p><img src="/img/img_files/D46CEF23B25B4F7F4448D000025DC773" alt=""><br><img src="/img/img_files/46EA62EBE6E6A0600C950B7A321B27D3" alt=""></p><h2 id="如何自动切换-IP？"><a href="#如何自动切换-IP？" class="headerlink" title="如何自动切换 IP？"></a>如何自动切换 IP？</h2><p>在解决多个手机号的情况后，那下个问题就来了，如何自动切换 IP 呢？这是一个自动化运营绕不开的问题。<br>有三种方式可以选择:</p><ul><li>IP 代理</li><li>飞行模式</li><li>小区宽带</li></ul><h3 id="IP-代理：所有人都能想到，但并不靠谱的方案"><a href="#IP-代理：所有人都能想到，但并不靠谱的方案" class="headerlink" title="IP 代理：所有人都能想到，但并不靠谱的方案"></a>IP 代理：所有人都能想到，但并不靠谱的方案</h3><p>IP 代理应该是很多人首先想到的解决方案，因为在编写 Python 爬虫的时候，是可以使用代理机制的。网上就有很多做 IP 代理的。但这里有两个认知，你需要注意：</p><ul><li>IP 代理没有你想得那么便宜。以不重复的 100 万 IP 为例，单日价格在 2700 元，相当于 1 万 IP=27 元。所以你会有这样一个疑惑：那些刷网站流量的，1 万流量只需要几元的是怎么做到的？</li><li>免费 IP 比你想象得要好用。实际上，有很多免费 IP 代理可以使用，它们主要的问题在于数量比较少。</li></ul><p>所以在量少的情况下，IP 代理是可以使用的。在量大的情况下，IP 代理就没那么好用了，因为成本太高，并不是一个靠谱的方案。</p><h3 id="飞行模式，一个让人飞起来的-idea！"><a href="#飞行模式，一个让人飞起来的-idea！" class="headerlink" title="飞行模式，一个让人飞起来的 idea！"></a>飞行模式，一个让人飞起来的 idea！</h3><p>当你发现，购买 IP 代理的价格比淘宝上售卖流量的还要贵的时候，你就知道他们用的根本不是 IP 代理。换个思维，有没有免费的 IP 呢？这里我想到了手机的飞行模式，它和路由器断开重连一样完美！<br>这是为什么呢？<br>当我们的手机采用飞行模式后再关闭，你会发现手机的 IP 发生了变化。同样，当你断开路由器后，再进行重连，IP 也自动发生了变化。这个就是我们想要的动态 IP！</p><h3 id="WIFI-和-MIFI"><a href="#WIFI-和-MIFI" class="headerlink" title="WIFI 和 MIFI"></a>WIFI 和 MIFI</h3><p>那么问题来了，怎样写程序来控制手机呢？这里你可以使用 MIFI 设备，MIFI 其实就是 Mobile WIFI 的意思。MIFI 设备最大的好处，就是脱离了手机，你不需要一台手机，而只需要一台 MIFI 设备和一张 SIM 卡。<br>MIFI 设备集成了路由器和调制解调器的功能，使用的流量还是 SIM 卡的流量。所以当我们断开 MIFI 设备重连的时候，就相当于自动换了 IP。当然，这个过程需要定制 MIFI 设备，也就是多一个网线接口，把数据传输出来，这样就可以自动进行控制了。</p><h3 id="MIFI-可能存在的问题"><a href="#MIFI-可能存在的问题" class="headerlink" title="MIFI 可能存在的问题"></a>MIFI 可能存在的问题</h3><p>MIFI 可以说是个很方便的解决方案，但是依然存在一个问题，就是当流量大的时候，手机的流量费是很高的。那这样的话，就不能采用 MIFI 的方式了，可以考虑使用小区宽带。小区宽带最大的好处，就是不限流量。<br>当然除了控制 MIFI 设备外，还需要控制交换器，才能做到自动切换 IP。所以在流量较小的情况下，MIFI 是个好的解决方案。流量大的情况，比如要访问视频，小区宽带是更好的方案。<br>在自由切换 IP 这个部分，我整理了以下的 3 种方案，一般来说手机飞行适合轻度的并发访问，而重度的流量访问方式还需要采用小区宽带的方案。</p><p><img src="/img/img_files/80FCAC56D979982EAB81EAE4D7FA57F7" alt=""></p><h2 id="如何模拟操作，是一个技术活"><a href="#如何模拟操作，是一个技术活" class="headerlink" title="如何模拟操作，是一个技术活"></a>如何模拟操作，是一个技术活</h2><p>模拟操作，就是文章开头中，我提到的流程中的最后一步。<br>所有的流程，如果想要实现机器自动化，就需要一个利器。这里 Python 最适合不过。那么该怎么做呢？<br>首先这里需要用到 Python 的几个工具。在做自动化运营的过程中，会经常使用这些工具，我简单给你介绍下：</p><ul><li>Selenium：用于 Web 测试的工具，支持多种浏览器和自动化测试。<br>lxml：网页解析利器，支持 HTML、XML、XPath 解析，而且解析效率很高。</li><li>Scrapy：强大的爬虫框架，提升开发效率。</li><li>Phantomjs：基于 webkit 的无头浏览器，无头就是没有 UI 界面的意思。同时 Phantomjs 提供了 JavaScript API 接口，可以直接与 Webkit 内容交互。通过它，你可以完成无界面的自动化测试、网页截屏等。通过网页截屏，就可以帮水军做结案报告。</li></ul><p><img src="/img/img_files/8F122FF5340DC00CDB4B5D795FBC1255" alt=""></p><p>通过以上的工具，我们就可以达到实时抓取，实时刷量的目的。当然这些工具只是表象，更重要的是模块化的思维。也就是如何使用这些工具，具体都做哪些事。一般来说，我们可以把自动化运营拆解成不同的模块。<br>下图是我以微信、微博为例，整理的自动化运营所需模块的全景图，这些模块都需要编写相应的代码来实现，从而打造整个社交网络上自动化运营的机器人团队。</p><p><img src="/img/img_files/5A8A1672293AEDBE3862B1D2B5CA3319" alt=""></p><p><a href="https://www.infoq.cn/article/ceDbB*8IpzJrwyIJ8v1J" target="_blank" rel="noopener">原文链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在社交网络上刷粉刷量，技术上是如何实现的？&quot;&gt;&lt;a href=&quot;#在社交网络上刷粉刷量，技术上是如何实现的？&quot; class=&quot;headerlink&quot; title=&quot;在社交网络上刷粉刷量，技术上是如何实现的？&quot;&gt;&lt;/a&gt;在社交网络上刷粉刷量，技术上是如何实现的？&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;有时候你看到高转发的微博，超多 10W+ 的文章，超高的粉丝关注，但好像留言互动却少的可怜，本文带你看看技术内的灰色产业。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们都知道很多社交网络可以刷粉，也可以刷阅读量。所以，我们经常会看到很多记者报道过这样的灰色产业链的新闻。&lt;br&gt;你也许很好奇，这些技术都是怎么实现的？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/img_files/BC08BFB4222C104157C1DC0BE169864F&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="刷量" scheme="https://blog.skys.top/tags/%E5%88%B7%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>安全相关文档收集</title>
    <link href="https://blog.skys.top/2019/02/19/security_paper/"/>
    <id>https://blog.skys.top/2019/02/19/security_paper/</id>
    <published>2019-02-18T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.767Z</updated>
    
    <content type="html"><![CDATA[<h2 id="技术文档、分析、手册指南"><a href="#技术文档、分析、手册指南" class="headerlink" title="技术文档、分析、手册指南"></a>技术文档、分析、手册指南</h2><p>平常收集的一些文档，觉得还不错整理下。<br>持续更新中……</p><ol><li><a href="http://blog.nsfocus.net/wp-content/uploads/2019/02/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E5%88%86%E6%9E%90%E6%89%8B%E5%86%8C.pdf" target="_blank" rel="noopener">绿盟智能设备安全分析手册</a>  <a href="/pdf/智能设备安全分析手册.pdf">|本地下载</a></li><li><a href="https://images.seebug.org/archive/%E9%95%BF%E4%BA%AD%E6%8A%80%E6%9C%AF%E4%B8%93%E6%A0%8F2018%E5%B9%B4%E5%BA%A6%E6%96%87%E9%9B%86.pdf" target="_blank" rel="noopener">长亭技术专栏2018年度文集</a>  <a href="/pdf/长亭技术专栏2018年度文集.pdf">|本地下载</a></li><li><a href="https://paper.seebug.org/820/" target="_blank" rel="noopener">Micro8–PHP 安全新闻早8点</a>  <a href="https://github.com/Micropoor/Micro8" target="_blank" rel="noopener">|本地下载</a></li><li>……  </li></ol><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;技术文档、分析、手册指南&quot;&gt;&lt;a href=&quot;#技术文档、分析、手册指南&quot; class=&quot;headerlink&quot; title=&quot;技术文档、分析、手册指南&quot;&gt;&lt;/a&gt;技术文档、分析、手册指南&lt;/h2&gt;&lt;p&gt;平常收集的一些文档，觉得还不错整理下。&lt;br&gt;持续更新中……&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.nsfocus.net/wp-content/uploads/2019/02/%E6%99%BA%E8%83%BD%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E5%88%86%E6%9E%90%E6%89%8B%E5%86%8C.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;绿盟智能设备安全分析手册&lt;/a&gt;  &lt;a href=&quot;/pdf/智能设备安全分析手册.pdf&quot;&gt;|本地下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://images.seebug.org/archive/%E9%95%BF%E4%BA%AD%E6%8A%80%E6%9C%AF%E4%B8%93%E6%A0%8F2018%E5%B9%B4%E5%BA%A6%E6%96%87%E9%9B%86.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;长亭技术专栏2018年度文集&lt;/a&gt;  &lt;a href=&quot;/pdf/长亭技术专栏2018年度文集.pdf&quot;&gt;|本地下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://paper.seebug.org/820/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Micro8–PHP 安全新闻早8点&lt;/a&gt;  &lt;a href=&quot;https://github.com/Micropoor/Micro8&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;|本地下载&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;……  &lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="安全" scheme="https://blog.skys.top/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="技术文档" scheme="https://blog.skys.top/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>从VPS快照中恢复文件</title>
    <link href="https://blog.skys.top/2019/01/10/vps-recovery/"/>
    <id>https://blog.skys.top/2019/01/10/vps-recovery/</id>
    <published>2019-01-10T10:38:21.000Z</published>
    <updated>2019-11-27T09:14:31.769Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何从虚拟机快照中恢复自己想要的文件？"><a href="#如何从虚拟机快照中恢复自己想要的文件？" class="headerlink" title="如何从虚拟机快照中恢复自己想要的文件？"></a>如何从虚拟机快照中恢复自己想要的文件？</h2><p>早前有个centos的vps，折腾软件的时候，莫名其妙崩了，导致没法开机了，多次重启无果，无奈只能先备份，重装系统。<br>但是原始的系统里面还是有一些比较重要的数据，后续找了一圈怎么恢复快照里面的数据，google了很多都没相关的解决方案。<br>后续搜到一个类似情况的解决案例，参照相关步骤，虽然折腾了一段时间，好在最终数据全保住了，在此对原作者表示感谢。<br>快照本身下载下来时大约1G左右，快照为整个系统的所有文件，解压出来好几个G，由于vps磁盘空间较小，具体的操作均在本地的ubuntu虚拟机里面执行。</p><p><strong>准备工作：</strong>  </p><ul><li>1、启动正常的ubuntu虚拟机  </li><li>2、下载好对应的快照文件为snapshot<em>**</em>.tar.gz  </li><li>3、安装kpartx (Create device maps from partition tables)</li></ul><p><strong>具体的操作流程：</strong></p><ul><li>1、解压下载的快照文件<br>tar -zxvf snapshot-**.tar.gz 解压后的文件为vm.disk文件  <a id="more"></a></li><li>2、losetup -f 查看哪个loop设备是空闲的<br>输出信息如下:<br>/dev/loop0 loop0这个设备是空闲的</li></ul><p>losetup /dev/loop0 vm<strong>*</strong>.disk</p><p>kpartx -av /dev/loop0<br>输出信息如下：<br>add map loop0p1_<br>add map loop0p2_</p><p>查看信息在哪个区，一般是大小比较大的那个，比如loop0p2中包含了etc、root等系统目录等.  </p><ul><li><p>3、把loop0p2 挂载到 /mnt<br>mount /dev/mapper/loop0p2 /mnt<br>然后就可以在虚拟机的mnt目录去查找自己想要的数据了。</p></li><li><p>4、数据复制完成后卸载镜像<br>umount /mnt<br>kpartx -dv /dev/loop0<br>losetup -d /dev/loop0</p></li></ul><p>参考链接：<br><a href="https://www.hostloc.com/thread-392553-1-1.html" target="_blank" rel="noopener">https://www.hostloc.com/thread-392553-1-1.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何从虚拟机快照中恢复自己想要的文件？&quot;&gt;&lt;a href=&quot;#如何从虚拟机快照中恢复自己想要的文件？&quot; class=&quot;headerlink&quot; title=&quot;如何从虚拟机快照中恢复自己想要的文件？&quot;&gt;&lt;/a&gt;如何从虚拟机快照中恢复自己想要的文件？&lt;/h2&gt;&lt;p&gt;早前有个centos的vps，折腾软件的时候，莫名其妙崩了，导致没法开机了，多次重启无果，无奈只能先备份，重装系统。&lt;br&gt;但是原始的系统里面还是有一些比较重要的数据，后续找了一圈怎么恢复快照里面的数据，google了很多都没相关的解决方案。&lt;br&gt;后续搜到一个类似情况的解决案例，参照相关步骤，虽然折腾了一段时间，好在最终数据全保住了，在此对原作者表示感谢。&lt;br&gt;快照本身下载下来时大约1G左右，快照为整个系统的所有文件，解压出来好几个G，由于vps磁盘空间较小，具体的操作均在本地的ubuntu虚拟机里面执行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;准备工作：&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、启动正常的ubuntu虚拟机  &lt;/li&gt;
&lt;li&gt;2、下载好对应的快照文件为snapshot&lt;em&gt;**&lt;/em&gt;.tar.gz  &lt;/li&gt;
&lt;li&gt;3、安装kpartx (Create device maps from partition tables)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;具体的操作流程：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、解压下载的快照文件&lt;br&gt;tar -zxvf snapshot-**.tar.gz 解压后的文件为vm.disk文件
    
    </summary>
    
    
      <category term="技术分享" scheme="https://blog.skys.top/tags/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"/>
    
      <category term="快照恢复" scheme="https://blog.skys.top/tags/%E5%BF%AB%E7%85%A7%E6%81%A2%E5%A4%8D/"/>
    
      <category term="vps" scheme="https://blog.skys.top/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title>智能门锁网络安全分析报告</title>
    <link href="https://blog.skys.top/2018/11/15/door-security/"/>
    <id>https://blog.skys.top/2018/11/15/door-security/</id>
    <published>2018-11-14T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="智能门锁网络安全分析报告"><a href="#智能门锁网络安全分析报告" class="headerlink" title="智能门锁网络安全分析报告"></a>智能门锁网络安全分析报告</h2><p><strong>引言</strong>  </p><p>2016年起，随着物联网、云计算、大数据等技术的不断成熟和广泛应用，加上资本的助推，智能家居异军突起，成为新兴产业势力。智能门锁作为智能家居产业中的代表性产品之一，发展潜力非常巨大，2017年智能门锁产值超过百亿元，市场规模接近800万把，预计2020年智能门锁市场规模将达到4000万把。 </p><p>智能门锁是一个典型的物联网系统，其整个系统由感知层、传输层和应用层组成，包括智能门锁设备、智能家庭网关、手机APP和云端服务等组件。其中传输层与应用层技术为现有互联网技术，相对成熟稳定。在感知层，用户身份认证方式主要有固定密码、临时密码、指纹、掌纹、人脸、RFID、NFC和APP等，近场接入技术主要有WIFI、蓝牙、Zigbee、433Mhz和 315MHz等。随着智能门锁的流行，各种安全隐患也不断被暴露出来，指纹复制、密码猜解、强磁干扰、APP漏洞、近场通信劫持、WIFI流量劫持和云端服务漏洞等各种智能门锁的安全事件已经被媒体广泛报道。</p><p>智能门锁的安全将会直接导致个人和家庭的生命财产安全，其重要性勿需多言。本报告重点关注智能门锁的网络安全问题，首先分析了智能门锁的发展趋势，梳理了智能门锁的各种开锁技术。接下来深入分析了智能门锁的各项联网技术，并根据智能门锁的组网体系架构提出了其安全风险模型，同时结合具体的智能门锁安全漏洞进行案例验证分析。最后从个人用户、厂商和行业主管等几个方面分别提出了几点智能门锁网络安全的建议，希望能给智能门锁行业提供一些参考。<br><a id="more"></a></p><p>转载，原文链接:<a href="https://mp.weixin.qq.com/s/Fpr0Qmm2hdSuEAnmLemjkQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Fpr0Qmm2hdSuEAnmLemjkQ</a></p><p>目录</p><p><strong><img src="/img/img_files/EB3D65BBB6F138CFA49BD20067683891" alt="">引言</strong></p><p><strong>**</strong><img src="/img/img_files/EB3D65BBB6F138CFA49BD20067683891" alt=""><strong>1、智能门锁市场现状与发展趋势**</strong></p><p><strong><strong>**</strong></strong><img src="/img/img_files/EB3D65BBB6F138CFA49BD20067683891" alt=""><strong>2、智能门锁技术发展现状<strong>**</strong></strong></p><ul><li><p>2.1 智能门锁组网技术</p></li><li><p>2.2 智能门锁开锁模式</p></li><li><p>2.2.1 固定密码开锁模式</p></li><li><p>2.2.2 临时密码开锁模式</p></li><li><p>2.2.3 生物钥匙开锁模式</p></li><li><p>2.2.4 智能卡钥匙开锁模式</p></li><li><p>2.2.5 手机APP开锁模式</p></li></ul><p><strong><strong><strong>**</strong></strong></strong><img src="/img/img_files/EB3D65BBB6F138CFA49BD20067683891" alt=""><strong>3、智能门锁安全风险与案例分析<strong><strong>**</strong></strong></strong></p><ul><li><p>3.1 安全风险模型</p></li><li><p>3.2 智能门锁安全风险</p></li><li><p>3.2.1 生物钥匙攻击</p></li><li><p>3.2.2 固定密码安全</p></li><li><p>3.2.3 固件窃取和逆向</p></li><li><p>3.2.4无线馈电攻击</p></li><li><p>3.3 移动应用安全风险</p></li><li><p>3.4 近场通信安全风险</p></li><li><p>3.4.1 RFID门锁攻击</p></li><li><p>3.4.2 315Mhz无线电门锁攻击</p></li><li><p>3.5 网络通信安全风险</p></li><li><p>3.6 云平台服务安全风险</p></li></ul><p><strong><strong><strong><strong>**</strong></strong></strong></strong><img src="/img/img_files/EB3D65BBB6F138CFA49BD20067683891" alt=""><strong>4、风险防范和安全建议<strong><strong><strong>**</strong></strong></strong></strong></p><ul><li><p>4.1 门锁用户</p></li><li><p>4.2 门锁厂商</p></li><li><p>4.3 行业监管和指导</p></li></ul><p><strong>1. 智能门锁市场现状与发展趋势</strong></p><p>智能门锁是指区别于传统机械锁的基础上改进的一类门锁，在用户安全性、识别性和管理性方面更加智能化和简便化的锁具。广义上说，具有指纹门锁、密码门锁、蓝牙门锁或者APP互联网门锁等任一功能的门锁均可称为智能门锁。</p><p>据《鲸准研究院-2018中国智能门锁行业深度研究报告》数据，2017年智能门锁销量约800万套，行业总产值超过100亿元，在2016年的基础上实现了翻倍增长，2018年有望继续翻倍。截至2018年6月底，我国4亿家庭智能门锁渗透率在5%左右，3000万套B端运营的租赁公寓渗透率在10%左右，未来发展空间巨大。</p><p>到2020年，我国智能门锁年销量将超过 4000万套，市场规模将超400亿元。2018、2019和2020三年将是智能门锁发展的黄金三年，到2022年，我国4亿家庭的智能门锁渗透率将达到35%，达到2018年欧美的水平，公寓端的渗透率将超过50%。</p><p>从技术发展趋势方面说，智能门锁的联网方式目前主要是WIFI和蓝牙，此外还有Zigbee、433MHz和 315MHz等，由于WIFI和NB-IoT优势非常明显，未来将会成为智能门锁的主流联网方式。</p><p><strong>2. 智能门锁技术发展现状</strong></p><h2 id="2-1-智能门锁组网技术"><a href="#2-1-智能门锁组网技术" class="headerlink" title="2.1 智能门锁组网技术"></a><strong>2.1 智能门锁组网技术</strong></h2><p>智能门锁的整体组网为典型的物联网三层结构，即感知层、传输层和应用层。其中感知层由智能门锁和智能手机APP组成，传输层包括家庭智能网关和移动通信基站等，应用层即为智能门锁云平台。下图列示了现在常见的智能门锁的联网方案，不同厂商不同型号的门锁往往选择其中一种或几种连接方式实现联网。</p><p><img src="/img/img_files/6333E646185FB53502E7EB4746A74066" alt=""></p><p>图2-1 典型的智能门锁组网技术  </p><p>在感知层，由于受到功耗的限制，大部分智能门锁采用电池供电，其通信方式主要有蓝牙、ZigBee、NB-IoT、433MHz和315MHz等。也有部分门锁有条件采用交流电供电，该类门锁通常采用WIFI方式与云端进行通信。</p><p>在传输层，其通信方式主要有家用宽带（WIFI/以太网）和移动通信（3G/4G）。</p><p>应用层即智能门锁的云端服务，主要负责智能门锁的设备接入、身份认证、逻辑控制、数据分析和业务展示等。目前智能门锁云端服务主要部署在云上，如阿里云、AWS、Azure和腾讯云等，以及各厂商自己的私有云上。</p><h2 id="2-2-智能门锁开锁模式"><a href="#2-2-智能门锁开锁模式" class="headerlink" title="2.2 智能门锁开锁模式"></a><strong>2.2 智能门锁开锁模式</strong></h2><h3 id="2-2-1-固定密码开锁模式"><a href="#2-2-1-固定密码开锁模式" class="headerlink" title="2.2.1 固定密码开锁模式"></a>2.2.1 固定密码开锁模式</h3><p>用户在安装固定密码智能门锁的时候，需要先进行门锁初始化，并完成密码设置，该密码存储在智能门锁的固态存储空间，同时也会上传到云端进行存储。</p><p>在用户开锁时，在门锁上输入密码，如果输入的密码与预先设置的密码一致，则可打开门锁。</p><p><img src="/img/img_files/03E498748A2492353BDA385A6F089154" alt=""></p><p>图2-2 固定密码开锁模式</p><h3 id="2-2-2-临时密码开锁模式"><a href="#2-2-2-临时密码开锁模式" class="headerlink" title="2.2.2 临时密码开锁模式"></a>2.2.2 临时密码开锁模式</h3><p>在临时密码开锁模式下，户主会通过手机APP从云端获取当前时段开锁的临时密码，并通过短信、微信或者手机APP等方式将临时密码发送给访客。</p><p>访客在门锁上输入接收到的临时密码后，门锁会将该密码与云端自动生成的当前时段临时密码进行对比，如果成功，则开锁。</p><p><img src="/img/img_files/E2246E3427C6DC7639943D0F9590D0DA" alt=""></p><p>图2-3 临时密码开锁模式</p><h3 id="2-2-3-生物钥匙开锁模式"><a href="#2-2-3-生物钥匙开锁模式" class="headerlink" title="2.2.3 生物钥匙开锁模式"></a>2.2.3 生物钥匙开锁模式</h3><p>目前，市面上常用且稳定可靠的智能门锁开锁生物特征主要有指纹、掌纹、虹膜和人脸等。</p><p>该类门锁在安装的过程中，会将指纹、掌纹、虹膜和人脸等生物特征初始化到智能门锁固态存储或者云端。</p><p>用户开锁时，门锁需要采集用户的指纹、掌纹、虹膜和人脸特征，并传统到云端与初始化特征进行对比，如果对比成功，则开锁。</p><p><img src="/img/img_files/CC5509B98AEFE85D9440E560A0086FA7" alt=""></p><p>图2-4 生物钥匙开锁模式</p><h3 id="2-2-4-智能卡钥匙开锁模式"><a href="#2-2-4-智能卡钥匙开锁模式" class="headerlink" title="2.2.4 智能卡钥匙开锁模式"></a>2.2.4 智能卡钥匙开锁模式</h3><p>用于智能门锁开锁的智能卡主要有RFID卡、NFC卡和CPU卡三类，该类门锁主要应用在酒店和公寓等场景。</p><p>使用RFID卡的门锁，门禁管理系统会在RFID卡中写入代表该卡身份的字符串，在开锁时，门锁提取RFID卡中的字符串，并传输到云端进行对比，对比成功，则开锁。</p><p>使用NFC卡和CPU卡的门锁，门禁管理系统会在NFC卡和CPU卡中写入代表该卡身份的私钥和公钥，在开锁时，该卡通过门锁与云端进行双向身份认证，如果认证成功，门锁接收到云端的开锁指令，打开门锁。</p><p><img src="/img/img_files/70FC6D5BE8883E8BEBBCF37CA9EFC08E" alt=""></p><p>图2-5 智能门禁卡开锁模式</p><h3 id="2-2-5-手机APP开锁模式"><a href="#2-2-5-手机APP开锁模式" class="headerlink" title="2.2.5 手机APP开锁模式"></a>2.2.5 手机APP开锁模式</h3><p>采用手机APP开锁的门锁，在初始化的过程中，云端会将门锁与指定手机上的APP进行绑定。</p><p>在用户开锁时，用户在手机APP上完成身份认证，然后在手机上点击开锁按钮，智能门锁就会接收到云端下发的开锁指令，然后打开门锁。</p><p><img src="/img/img_files/01B24C010074B91E12ED145010EC0C14" alt=""></p><p>图2-6 手机APP开锁模式</p><p><strong>3.智能门锁安全风险与案例分析</strong></p><h2 id="3-1-安全风险模型"><a href="#3-1-安全风险模型" class="headerlink" title="3.1 安全风险模型"></a><strong>3.1 安全风险模型</strong></h2><p>根据智能门锁的组网体系架构，其安全风险可以划分为以下五个方面：智能门锁安全风险（针对智能门锁设备的攻击）、移动应用安全风险（针对智能门锁手机APP的攻击）、近场通信安全风险(针对WIFI、ZigBee、蓝牙、433和315等通信方式的攻击)、网络安全风险（针对家庭智能网关和有线数据拦截的攻击）和应用安全风险（针对智能门锁云平台的攻击）。</p><p><img src="/img/img_files/11984BDDBBFBC3DA5B34D4AD31C1B531" alt=""></p><p>图3-1 智能门锁网络安全风险模型</p><h2 id="3-2-智能门锁安全风险"><a href="#3-2-智能门锁安全风险" class="headerlink" title="3.2 智能门锁安全风险"></a><strong>3.2 智能门锁安全风险</strong></h2><h3 id="3-2-1-生物钥匙攻击"><a href="#3-2-1-生物钥匙攻击" class="headerlink" title="3.2.1 生物钥匙攻击"></a>3.2.1 生物钥匙攻击</h3><p>智能门锁的常用生物钥匙中，虹膜和人脸的伪造难度较高，已知的攻击风险较小，但指纹和掌纹有较高的伪造风险，难度低，已经比较常见。</p><p><img src="/img/img_files/1ABBB57DDAB37EAB1EEE0C9C8ADCCA92" alt=""></p><p>图3-2 指纹识别攻击  </p><h3 id="3-2-2-固定密码安全"><a href="#3-2-2-固定密码安全" class="headerlink" title="3.2.2 固定密码安全"></a>3.2.2 固定密码安全</h3><p>在使用固定密码的智能门锁中，经常出现使用默认密码、后门密码、密码逻辑漏洞和短密码等问题，并存在密码泄漏等现象。</p><p><img src="/img/img_files/61C4DBC20398106467EB5932BF6A4BBE" alt=""></p><p>图3-3 固定密码攻击  </p><h3 id="3-2-3-固件窃取和逆向"><a href="#3-2-3-固件窃取和逆向" class="headerlink" title="3.2.3 固件窃取和逆向"></a>3.2.3 固件窃取和逆向</h3><p>攻击者拆开智能门锁后，通过专用工具从固件存储器中读取固件内容，然后逆向分析固件存在的漏洞，再结合其它攻击手段对漏洞进行利用。</p><p><img src="/img/img_files/650803C786F02FEC0BBC17F34DA65018" alt=""></p><p>图3-4固件读取  </p><h3 id="3-2-4-无线馈电攻击"><a href="#3-2-4-无线馈电攻击" class="headerlink" title="3.2.4 无线馈电攻击"></a>3.2.4 无线馈电攻击</h3><p>（1）原理分析</p><p>无线馈电是一项应用广泛的技术，包括电磁炉、无线充电、非接触卡等。一些智能门锁由于设计缺陷，在布线及电路设计时没有考虑电磁干扰问题。攻击者可以利用特斯拉线圈通过无线电波干扰，使得智能门锁的内部电路产生直流馈电。</p><p>如果这种直流馈电足够高，将触发智能门锁小型电机驱动锁芯实现开锁。或者导致MCU的逻辑异常而重启，有的智能门锁默认重启后会自动开锁。</p><p><img src="/img/img_files/CB2C77755918BDFCCBA5AEBB232B1FC4" alt=""></p><p>图3-5 开锁电路图  </p><p>（2）案例分析</p><p>2018年5月26日，第九届中国（永康）国际门业博览会上，一位女士以一个小黑盒连续打开了多家品牌的智能门锁，最短的时间只有3秒，一篇名为《那个女人毁了整个指纹锁行业》的文章迅速蹿红，成为智能门锁圈的恶梦。</p><p>“小黑盒”的原理是特斯拉线圈通电后，可能产生两种效果：一是利用智能门锁电路的馈电系统驱动电流打开门锁；二是该线圈产生强电磁脉冲攻击智能门锁芯片，会造成芯片死机并重启，有的智能门锁默认重启后会自动开锁。</p><p><img src="/img/img_files/6C7F841F9BB5F75B4155FC1ADCE5C369" alt=""></p><p>图3-6 “小黑盒”开锁图  </p><h2 id="3-3-移动应用安全风险"><a href="#3-3-移动应用安全风险" class="headerlink" title="3.3 移动应用安全风险"></a><strong>3.3 移动应用安全风险</strong></h2><p>（1）原理分析</p><p>移动应用APP中存在各种常见的安全风险，如：移动端APP代码中或者固件中使用固定的加解密密钥；移动端APP代码没有采用加固和混淆技术使得代码被完整逆向，进而了解并破解开锁机制然后构造控制指令进行攻击；开发人员遗留的代码BUG问题，有可能导致绕过相关权限验证；移动端操作系统出现相关漏洞，导致被植入恶意代码进而控制手机实现攻击；移动端APP和设备之间的认证问题，如果移动端APP和设备之间的认证过程出现漏洞，这就容易导致中间人攻击，即伪造一个假移动端APP和真实设备进行通信达到欺骗目的进而实现攻击。</p><p>攻击者利用智能门锁对应的APP存在的这些漏洞或缺陷，绕过智能门锁、APP和云端服务预先设定的逻辑，实现非授权的开锁操作。</p><p>（2）案例分析</p><p>某品牌智能门锁存在密码重置漏洞（漏洞编号CNVD-2017-03908）。我们通过逆向智能门锁APP，分析其代码逻辑及智能门锁APP与云端网络交互的报文，掌握了相关云端接口的定义。发现该品牌锁的某个业务接口缺少用户合法性验证，攻击者可以利用已经掌握的用户信息，绕过合法性验证进行密码重置。攻击者利用重置后的密码完成登录后，可以进行开锁和修改用户信息等操作。在此研究基础上，我们又做了进一步的安全分析，发现了一个影响更大的安全问题：攻击者通过该漏洞可以获取该智能门锁产品的全部用户资料，包括手机号和开门密码。由于该漏洞不依赖手机验证码，这种攻击具有更大的隐蔽性，因此危害更大。</p><p><img src="/img/img_files/600435F93204D2EBFF060519DCD7B6DC" alt=""></p><p>图3-7 移动应用安全案例</p><h2 id="3-4-近场通信安全风险"><a href="#3-4-近场通信安全风险" class="headerlink" title="3.4 近场通信安全风险"></a><strong>3.4 近场通信安全风险</strong></h2><h3 id="3-4-1-RFID门锁攻击"><a href="#3-4-1-RFID门锁攻击" class="headerlink" title="3.4.1 RFID门锁攻击"></a>3.4.1 RFID门锁攻击</h3><p>（1）原理分析</p><p>RFID卡中存储代表持卡人身份信息的字符串，而一般的RFID卡中的信息以明文形式存储，或者仅经过简单处理后存储，攻击者可以读取其中的信息，并复制到其卡片中，从而获取持卡人的授权。</p><p>（2）案例分析</p><p>某品牌智能门锁为RFID门锁，测试人员从淘宝上购买简单的RFID读写器，即可从已有的RFID卡中读取信息，并写入到新的RFID卡中，并通过新的RFID正常打开门锁。</p><p>该类RFID卡常常以小区门禁、楼宇门禁和酒店房卡等形式出现，造成的影响面极大。</p><p><img src="/img/img_files/4E249879B780A457F38A729C73DEB828" alt=""></p><p>图3-8读取门禁卡信息</p><h3 id="3-4-2-315Mhz无线电门锁攻击"><a href="#3-4-2-315Mhz无线电门锁攻击" class="headerlink" title="3.4.2 315Mhz无线电门锁攻击"></a>3.4.2 315Mhz无线电门锁攻击</h3><p>（1）原理分析</p><p>无线电门锁响应指定的无线电信号，而一般的无线电门锁的信号是固定的，攻击者可以重放无线电信号或对信号进行简单处理，从而伪造真实用户开关门锁的行为。</p><p>（2）案例分析</p><p>某品牌智能门锁存在无线电信号重放攻击漏洞（漏洞编号CNVD-2018-02695）。该门锁为无线电门锁，测试人员从淘宝上购买简单的无线电收发器，即可抓取无线电门锁开关门信号，并存储此无线电数据包到本地，通过重放包含开锁信号的无线电数据包即可打开门锁。</p><p>该类无线电门锁常常以车库门禁、家庭门禁和汽车门等形式出现，这种攻击行为可形成巨大安全隐患。</p><p><img src="/img/img_files/1AE35302983E1F43DF591A6481EB07C4" alt=""></p><p>图3-9 利用无线电工具重放信号开锁  </p><h2 id="3-5-网络通信安全风险"><a href="#3-5-网络通信安全风险" class="headerlink" title="3.5 网络通信安全风险"></a><strong>3.5 网络通信安全风险</strong></h2><p>（1）原理分析</p><p>有的智能门锁直接通过WIFI信号连接到互联网，而其它通信方式的门锁连接到相应的网关后，也会通过WIFI信号连接到互联网，与此同时，手机APP在家时，也会通过WIFI连接到智能门锁和云端服务器。考虑到大量的智能门锁通信协议采用明文传输，或者加密传输过程中存在漏洞，通过攻击WIFI路由器、智能家居网关，或者截持WIFI信号，可以实现对智能门锁的控制。</p><p>（2）案例分析</p><p>某品牌智能门锁存在设计漏洞（漏洞编号CNVD-2016-12586）。测试人员通过WIFI信号抓取，分析出APP与智能门锁云端服务之间的通信是明文传输，并识别出智能门锁开门和关门的特定数据包。</p><p>测试人员在劫持WIFI信号后，即可通过WIFI信号重放攻击的方式，实现对门锁的控制。</p><p><img src="/img/img_files/3BF2FF7C51BA86D22E89C85956A94151" alt=""></p><p>图3-11 WIFI信号劫持实现开关门操作</p><h2 id="3-6-云平台服务安全风险"><a href="#3-6-云平台服务安全风险" class="headerlink" title="3.6 云平台服务安全风险"></a><strong>3.6 云平台服务安全风险</strong></h2><p>（1）用户身份鉴别漏洞</p><p>未限制密码复杂度，未限制非法登陆次数，重置密码的短信验证码又本地产生或者存在于返回数据包中。</p><p>（2）访问控制漏洞</p><p>后端信息系统没有对数据包中重要访问控制参数进行校验，导致越权操作。还有存在远程代码执行漏洞，可以进行root权限命令执行。重要回话信息被劫持。</p><p>（3）云管理平台系统存在web安全问题</p><p>常见的web安全漏洞同样存在于智能门锁云管理平台，例如，SQL注入、任意文件上传、失效的身份验证和回话管理、跨站脚本攻击、不安全的直接对象引用、安全配置错误、敏感信息泄露、功能级访问控制缺失、跨站请求伪造、使用含有已经存在漏洞的组件和未验证的重定向和转发等漏洞。</p><p><strong>4. 风险防范和安全建议</strong></p><p>根据智能门锁风险模型，智能门锁面临的安全风险包括智能门锁安全风险、移动应用安全风险、近场通信安全风险、网络安全风险和应用安全风险等五个方面的风险。</p><p>智能门锁的安全问题一旦被黑客关注并利用，将会给用户带来非常直接的经济和财产损失，并给社会造成极为严重的负面影响。接下来将从用户、厂商和行业三个角度，分别给出一些针对性的改进意见和措施。</p><h2 id="4-1-门锁用户"><a href="#4-1-门锁用户" class="headerlink" title="4.1 门锁用户"></a><strong>4.1 门锁用户</strong></h2><p>对于个人用户来说，首先尽量选用知名品牌厂商生产、性价比适合自身的智能门锁产品。其次如果家庭选择安装了智能家庭网关设备，应尽量选择具有安全功能的设备，如近场通信安全监控和流量安全监控等相关安全功能，对常见的攻击行为进行监控即可有效提高家庭安全。</p><h2 id="4-2-门锁厂商"><a href="#4-2-门锁厂商" class="headerlink" title="4.2 门锁厂商"></a><strong>4.2 门锁厂商</strong></h2><p>（1）确实提高移动应用的安全质量</p><p>智能门锁厂商通过在移动应用设计过程中引入安全设计，在移动应用测试过程中增加安全测试，并通过安全加固等手段加强移动应用的抗分析能力，可以较好地提高移动应用的安全质量。</p><p>（2）加强智能门锁安全设计把关</p><p>智能门锁厂商在设计的过程中，通过提高电磁屏蔽、关闭调试接口和调试功能、加固固件、增加指纹活性检测、实施RFID加密、禁止简单密码、动态快速升级固件等多种安全措施，可以确实提高智能门锁的抗攻击能力。</p><p>（3）提高网络安全防护水平</p><p>智能门锁体系中智能门锁、移动应用和云端服务三者之间，都应该采用规范的加密传输方式进行通信，优先选择采用国家密码管理部门批准使用的密码算法和密码算法使用规范，以确保网络通信的安全。</p><p>（4）持续保障云端服务安全</p><p>在提高应用层安全风险方面，应该在云端服务设计过程中引入安全设计，在产品测试过程中引入安全测试，在服务上线后，进行持续的渗透测试和风险评估，选择具有安全防护实力的云服务平台，并部署相关的云端安全防护产品或服务，对云端实施从物理层、虚拟化层、主机层、网络层、数据层到应用层的全体系、全方位、全时段的安全监控与运维，形成完备的安全防护措施，确保云端服务的高度安全。</p><h2 id="4-3-行业监管和指导"><a href="#4-3-行业监管和指导" class="headerlink" title="4.3 行业监管和指导"></a><strong>4.3 行业监管和指导</strong></h2><p>对于智能门锁整体行业，相关行业部门应该组织制定一套完善的安全实施标准，覆盖智能门锁体系从规划、设计、开发、测试、部署、上线到运营的全部过程，强化整个行业的安全意识，确实提高整个行业整体的产品安全水平。同时组织制定配套的智能门锁网络安全产品检测规范，联网智能门锁产品上市前应进行网络安全相关检测和认证。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;智能门锁网络安全分析报告&quot;&gt;&lt;a href=&quot;#智能门锁网络安全分析报告&quot; class=&quot;headerlink&quot; title=&quot;智能门锁网络安全分析报告&quot;&gt;&lt;/a&gt;智能门锁网络安全分析报告&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;引言&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;2016年起，随着物联网、云计算、大数据等技术的不断成熟和广泛应用，加上资本的助推，智能家居异军突起，成为新兴产业势力。智能门锁作为智能家居产业中的代表性产品之一，发展潜力非常巨大，2017年智能门锁产值超过百亿元，市场规模接近800万把，预计2020年智能门锁市场规模将达到4000万把。 &lt;/p&gt;
&lt;p&gt;智能门锁是一个典型的物联网系统，其整个系统由感知层、传输层和应用层组成，包括智能门锁设备、智能家庭网关、手机APP和云端服务等组件。其中传输层与应用层技术为现有互联网技术，相对成熟稳定。在感知层，用户身份认证方式主要有固定密码、临时密码、指纹、掌纹、人脸、RFID、NFC和APP等，近场接入技术主要有WIFI、蓝牙、Zigbee、433Mhz和 315MHz等。随着智能门锁的流行，各种安全隐患也不断被暴露出来，指纹复制、密码猜解、强磁干扰、APP漏洞、近场通信劫持、WIFI流量劫持和云端服务漏洞等各种智能门锁的安全事件已经被媒体广泛报道。&lt;/p&gt;
&lt;p&gt;智能门锁的安全将会直接导致个人和家庭的生命财产安全，其重要性勿需多言。本报告重点关注智能门锁的网络安全问题，首先分析了智能门锁的发展趋势，梳理了智能门锁的各种开锁技术。接下来深入分析了智能门锁的各项联网技术，并根据智能门锁的组网体系架构提出了其安全风险模型，同时结合具体的智能门锁安全漏洞进行案例验证分析。最后从个人用户、厂商和行业主管等几个方面分别提出了几点智能门锁网络安全的建议，希望能给智能门锁行业提供一些参考。&lt;br&gt;
    
    </summary>
    
    
      <category term="安全" scheme="https://blog.skys.top/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="IoT" scheme="https://blog.skys.top/tags/IoT/"/>
    
      <category term="door" scheme="https://blog.skys.top/tags/door/"/>
    
  </entry>
  
  <entry>
    <title>Android App 防抓包分析</title>
    <link href="https://blog.skys.top/2018/10/29/anti-capture/"/>
    <id>https://blog.skys.top/2018/10/29/anti-capture/</id>
    <published>2018-10-28T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.762Z</updated>
    
    <content type="html"><![CDATA[<h2 id="别让你的app网络数据被轻易获取"><a href="#别让你的app网络数据被轻易获取" class="headerlink" title="别让你的app网络数据被轻易获取"></a>别让你的app网络数据被轻易获取</h2><h1 id="抓包方式"><a href="#抓包方式" class="headerlink" title="抓包方式"></a>抓包方式</h1><p>提到Android APP 防抓包，不可避免的首先肯定要介绍下，对应的抓包方式了。<br>目前已知常用的抓包方式主要有以下几种：</p><ol><li>tcpdump root下的抓包方式，可以抓取通过Android手机的所有流量数据包</li><li>免root手机端抓包 主要原理是通过VPN代理抓包，常用的软件有app.greyshirts.sslcapture和com.cyb.net.capture等 </li><li>通过wifi设置代理配合fiddler，charles等工具抓包</li><li>更外层的直接抓取外层网络的数据包，如wireshark抓取无线网卡流量数据包等</li></ol><h1 id="防抓包方式"><a href="#防抓包方式" class="headerlink" title="防抓包方式"></a>防抓包方式</h1><p>目前在手机端除了第4种，其他的都是可以采用相应的对策来进行检测，第一种由于需要root，暂时不提。主要讲第二种和第三种的防抓包方式。</p><a id="more"></a><p>具体的方式如下：  </p><p>主要是检测2个抓包工具（VPN代理的方式）：</p><p>app.greyshirts.sslcapture</p><p>com.cyb.net.capture</p><p>对应的会创建的网卡接口名称：</p><p>“tun0”和”ppp0”</p><p>另外主要还有一种起关键作用的是下面这个:</p><p>System.getProperty(“http.proxyHost”)<br>System.getProperty(“http.proxyPort”)<br>设置代理之后，通过这个可以获得对应的代理ip和端口。</p><p>通过上面的方法检测网卡接口名称和是否存在代理ip和对应的端口即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;别让你的app网络数据被轻易获取&quot;&gt;&lt;a href=&quot;#别让你的app网络数据被轻易获取&quot; class=&quot;headerlink&quot; title=&quot;别让你的app网络数据被轻易获取&quot;&gt;&lt;/a&gt;别让你的app网络数据被轻易获取&lt;/h2&gt;&lt;h1 id=&quot;抓包方式&quot;&gt;&lt;a href=&quot;#抓包方式&quot; class=&quot;headerlink&quot; title=&quot;抓包方式&quot;&gt;&lt;/a&gt;抓包方式&lt;/h1&gt;&lt;p&gt;提到Android APP 防抓包，不可避免的首先肯定要介绍下，对应的抓包方式了。&lt;br&gt;目前已知常用的抓包方式主要有以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;tcpdump root下的抓包方式，可以抓取通过Android手机的所有流量数据包&lt;/li&gt;
&lt;li&gt;免root手机端抓包 主要原理是通过VPN代理抓包，常用的软件有app.greyshirts.sslcapture和com.cyb.net.capture等 &lt;/li&gt;
&lt;li&gt;通过wifi设置代理配合fiddler，charles等工具抓包&lt;/li&gt;
&lt;li&gt;更外层的直接抓取外层网络的数据包，如wireshark抓取无线网卡流量数据包等&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;防抓包方式&quot;&gt;&lt;a href=&quot;#防抓包方式&quot; class=&quot;headerlink&quot; title=&quot;防抓包方式&quot;&gt;&lt;/a&gt;防抓包方式&lt;/h1&gt;&lt;p&gt;目前在手机端除了第4种，其他的都是可以采用相应的对策来进行检测，第一种由于需要root，暂时不提。主要讲第二种和第三种的防抓包方式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://blog.skys.top/tags/Android/"/>
    
      <category term="抓包" scheme="https://blog.skys.top/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Android安全渗透测试工具</title>
    <link href="https://blog.skys.top/2018/10/23/AndroidSecurityTools/"/>
    <id>https://blog.skys.top/2018/10/23/AndroidSecurityTools/</id>
    <published>2018-10-22T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安卓渗透测试相关工具"><a href="#安卓渗透测试相关工具" class="headerlink" title="安卓渗透测试相关工具"></a>安卓渗透测试相关工具</h2><p>Android security testing is more often used by security industries to test the vulnerabilities in Android applications. Here you can find the Comprehensive Android Penetration testing tools and resource list that covers Performing Penetration testing Operation in Android Mobiles.</p><a id="more"></a><h2 id="Online-Analyzers"><a href="#Online-Analyzers" class="headerlink" title="Online Analyzers"></a><a href="https://github.com/ashishb/android-security-awesome#online-analyzers" target="_blank" rel="noopener"></a><strong>Online Analyzers</strong></h2><ol><li><a href="http://andrototal.org/" target="_blank" rel="noopener">AndroTotal</a></li><li><a href="http://tracedroid.few.vu.nl/" target="_blank" rel="noopener">Tracedroid</a></li><li><a href="http://www.visualthreat.com/" target="_blank" rel="noopener">Visual Threat</a></li><li><a href="http://www.mobilemalware.com.br/analysis/index_en.php" target="_blank" rel="noopener">Mobile Malware Sandbox</a></li><li><a href="https://www.appknox.com/" target="_blank" rel="noopener">Appknox</a> – not free</li><li><a href="https://appscan.bluemix.net/mobileAnalyzer" target="_blank" rel="noopener">IBM Security AppScan Mobile Analyzer</a> – not free</li><li><a href="https://apkscan.nviso.be/" target="_blank" rel="noopener">NVISO ApkScan</a> 10.<a href="http://undroid.av-comparatives.info/" target="_blank" rel="noopener">AVC UnDroid</a> 12.<a href="https://habo.qq.com/" target="_blank" rel="noopener">habo</a> 10/day 13.<a href="https://www.virustotal.com/" target="_blank" rel="noopener">Virustotal</a>-max 128MB 14.<a href="http://app-ray.co/" target="_blank" rel="noopener">Fraunhofer App-ray</a> – not free 15.<a href="https://appcritique.boozallen.com/" target="_blank" rel="noopener">AppCritique</a> – Upload your Android APKs and receive comprehensive free security assessments. 16.<a href="https://www.nowsecure.com/blog/2016/09/19/announcing-nowsecure-lab-automated/" target="_blank" rel="noopener">NowSecure Lab Automated</a> – Enterprise tool for mobile app security testing both Android and iOS mobile apps. Lab Automated features dynamic and static analysis on real devices in the cloud to return results in minutes. Not free</li></ol><h2 id="Static-Analysis-Tools"><a href="#Static-Analysis-Tools" class="headerlink" title="Static Analysis Tools"></a><strong>Static Analysis Tools</strong></h2><ol><li><a href="https://github.com/maaaaz/androwarn/" target="_blank" rel="noopener">Androwarn</a> – detect and warn the user about potential malicious behaviors developed by an Android application.</li><li><a href="https://github.com/sonyxperiadev/ApkAnalyser" target="_blank" rel="noopener">ApkAnalyser</a></li><li><a href="https://github.com/honeynet/apkinspector/" target="_blank" rel="noopener">APKInspector</a></li><li><a href="https://www.cert.org/secure-coding/tools/didfail.cfm" target="_blank" rel="noopener">Droid Intent Data Flow Analysis for Information Leakage</a></li><li><a href="https://bitbucket.org/srl/droidlegacy" target="_blank" rel="noopener">DroidLegacy</a></li><li><a href="http://siis.cse.psu.edu/tools.html" target="_blank" rel="noopener">Several tools from PSU</a></li><li><a href="https://github.com/EugenioDelfa/Smali-CFGs" target="_blank" rel="noopener">Smali CFG generator</a></li><li><a href="https://blogs.uni-paderborn.de/sse/tools/flowdroid/" target="_blank" rel="noopener">FlowDroid</a></li><li><a href="https://www.pnfsoftware.com/" target="_blank" rel="noopener">Android Decompiler</a> – not free</li><li><a href="http://pscout.csl.toronto.edu/" target="_blank" rel="noopener">PSCout</a> – A tool that extracts the permission specification from the Android OS source code using static analysis</li><li><a href="http://amandroid.sireum.org/" target="_blank" rel="noopener">Amandroid</a></li><li><a href="https://github.com/dorneanu/smalisca" target="_blank" rel="noopener">SmaliSCA</a> – Smali Static Code Analysis</li><li><a href="https://github.com/douggard/CFGScanDroid" target="_blank" rel="noopener">CFGScanDroid</a> – Scans and compares CFG against CFG of malicious applications</li><li><a href="https://github.com/maldroid/maldrolyzer" target="_blank" rel="noopener">Madrolyzer</a> – extracts actionable data like C&amp;C, phone number etc.</li><li><a href="https://www.cs.washington.edu/sparta" target="_blank" rel="noopener">SPARTA</a> – verifies (proves) that an app satisfies an information-flow security policy; built on the <a href="https://types.cs.washington.edu/checker-framework/" target="_blank" rel="noopener">Checker Framework</a></li><li><a href="https://github.com/JulianSchuette/ConDroid" target="_blank" rel="noopener">ConDroid</a> – Performs a combination of symbolic + concrete execution of the app</li><li><a href="https://github.com/serval-snt-uni-lu/DroidRA" target="_blank" rel="noopener">DroidRA</a></li><li><a href="https://github.com/ClaudiuGeorgiu/RiskInDroid" target="_blank" rel="noopener">RiskInDroid</a> – A tool for calculating the risk of Android apps based on their permissions, with an online demo available.</li><li><a href="https://github.com/SUPERAndroidAnalyzer/super" target="_blank" rel="noopener">SUPER</a> – Secure, Unified, Powerful and Extensible Rust Android Analyzer</li><li><a href="https://github.com/google/android-classyshark" target="_blank" rel="noopener">ClassyShark</a> – Standalone binary inspection tool which can browse any Android executable and show important info.</li></ol><h2 id="Android-Security-App-Vulnerability-Scanners"><a href="#Android-Security-App-Vulnerability-Scanners" class="headerlink" title="Android Security App Vulnerability Scanners"></a><strong>Android Security <a href="https://github.com/ashishb/android-security-awesome#app-vulnerability-scanners" target="_blank" rel="noopener"></a>App Vulnerability Scanners</strong></h2><ol><li><a href="https://github.com/linkedin/qark/" target="_blank" rel="noopener">QARK</a> – QARK by LinkedIn is for app developers to scan app for security issues</li><li><a href="https://github.com/AndroBugs/AndroBugs_Framework" target="_blank" rel="noopener">AndroBugs</a></li><li><a href="https://github.com/google/nogotofail" target="_blank" rel="noopener">Nogotofail</a></li><li><a href="https://devknox.io/" target="_blank" rel="noopener">Devknox</a> – Autocorrect Android Security issues as if it was spell check from your IDE</li><li><a href="https://github.com/flankerhqd/JAADAS" target="_blank" rel="noopener">JAADAS</a> – Joint intraprocedural and inter-procedure program analysis tool to find vulnerabilities in Android apps, built on Soot and Scala</li></ol><h2 id="Dynamic-Analysis-Tools"><a href="#Dynamic-Analysis-Tools" class="headerlink" title="Dynamic Analysis Tools"></a><a href="https://github.com/ashishb/android-security-awesome#dynamic-analysis-tools" target="_blank" rel="noopener"></a><strong>Dynamic Analysis Tools</strong></h2><ol><li><a href="http://www.mulliner.org/blog/blosxom.cgi/security/androiddbiv02.html" target="_blank" rel="noopener">Android DBI framework</a></li><li><a href="https://github.com/sh4hin/Androl4b" target="_blank" rel="noopener">Androl4b</a>– A Virtual Machine For Assessing Android applications, Reverse Engineering and Malware Analysis</li><li><a href="http://www.mobilemalware.com.br/amat/download.html" target="_blank" rel="noopener">Android Malware Analysis Toolkit</a> – (Linux distro) Earlier it use to be an <a href="http://dunkelheit.com.br/amat/analysis/index_en.php" target="_blank" rel="noopener">online analyzer</a></li><li><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF" target="_blank" rel="noopener">Mobile-Security-Framework MobSF</a> – Mobile Security Framework is an intelligent, all-in-one open source mobile application (Android/iOS) automated pen-testing framework capable of performing static, dynamic analysis and web API testing.</li><li><a href="https://appsec-labs.com/AppUse/" target="_blank" rel="noopener">AppUse</a> – custom build for pentesting</li><li><a href="https://thecobraden.com/projects/cobradroid/" target="_blank" rel="noopener">Cobradroid</a> – custom image for malware analysis</li><li><a href="https://github.com/pjlantz/droidbox" target="_blank" rel="noopener">Droidbox</a></li><li><a href="https://github.com/mwrlabs/drozer" target="_blank" rel="noopener">Drozer</a></li><li><a href="https://forum.xda-developers.com/xposed/xposed-installer-versions-changelog-t2714053" target="_blank" rel="noopener">Xposed</a> – equivalent of doing Stub based code injection but without any modifications to the binary</li><li><a href="https://github.com/ac-pm/Inspeckage" target="_blank" rel="noopener">Inspeckage</a> – Android Package Inspector – dynamic analysis with api hooks, start unexported activities and more. (Xposed Module)</li><li><a href="https://github.com/AndroidHooker/hooker" target="_blank" rel="noopener">Android Hooker</a> – Dynamic Java code instrumentation (requires the Substrate Framework)</li><li><a href="https://github.com/ZSShen/ProbeDroid" target="_blank" rel="noopener">ProbeDroid</a> – Dynamic Java code instrumentation</li><li><a href="https://androidtamer.com/" target="_blank" rel="noopener">Android Tamer</a> – Virtual / Live Platform for Android Security Professionals</li><li><a href="https://github.com/sycurelab/DECAF" target="_blank" rel="noopener">DECAF</a> – Dynamic Executable Code Analysis Framework based on QEMU (DroidScope is now an extension to DECAF)</li><li><a href="https://github.com/idanr1986/cuckoo-droid" target="_blank" rel="noopener">CuckooDroid</a> – Android extension for Cuckoo sandbox</li><li><a href="https://github.com/MobileForensicsResearch/mem" target="_blank" rel="noopener">Mem</a> – Memory analysis of Android Security (root required)</li><li><a href="http://www.ida.liu.se/labs/rtslab/publications/2011/spsm11-burguera.pdf" target="_blank" rel="noopener">Crowdroid</a> – unable to find the actual tool</li><li><a href="https://github.com/nwhusted/AuditdAndroid" target="_blank" rel="noopener">AuditdAndroid</a> – android port of auditd, not under active development anymore</li><li><a href="https://code.google.com/p/asef/" target="_blank" rel="noopener">AndroidSecurity Evaluation Framework</a> – not under active development anymore</li><li><a href="https://redmine.honeynet.org/projects/are/wiki" target="_blank" rel="noopener">Android Reverse Engineering</a> – ARE (android reverse engineering) not under active development anymore</li><li><a href="https://github.com/xurubin/aurasium" target="_blank" rel="noopener">Aurasium</a> – Practical security policy enforcement for Android apps via bytecode rewriting and in-place reference monitor.</li><li><a href="https://github.com/strazzere/android-lkms" target="_blank" rel="noopener">Android Linux Kernel modules</a></li><li><a href="https://manifestsecurity.com/appie/" target="_blank" rel="noopener">Appie</a> – Appie is a software package that has been pre-configured to function as an Android Pentesting Environment.It is completely portable and can be carried on USB stick or smartphone.This is a one-stop answer for all the tools needed in Android Application Security Assessment and an awesome alternative to existing virtual machines.</li><li><a href="https://github.com/zyrikby/StaDynA" target="_blank" rel="noopener">StaDynA</a> – a system supporting security app analysis in the presence of dynamic code update features (dynamic class loading and reflection). This tool combines static and dynamic analysis of Android applications in order to reveal the hidden/updated behavior and extend static analysis results with this information.</li><li><a href="https://github.com/zhengmin1989/DroidAnalytics" target="_blank" rel="noopener">DroidAnalytics</a> – incomplete</li><li><a href="https://github.com/oguzhantopgul/Vezir-Project" target="_blank" rel="noopener">Vezir Project</a> – Virtual Machine for Mobile Application Pentesting and Mobile Malware Analysis</li><li><a href="https://github.com/xtiankisutsa/MARA_Framework" target="_blank" rel="noopener">MARA</a> – Mobile Application Reverse engineering and Analysis Framework</li><li><a href="http://appanalysis.org/download.html" target="_blank" rel="noopener">Taintdroid</a> – requires AOSP compilation</li></ol><h2 id="Reverse-Engineering"><a href="#Reverse-Engineering" class="headerlink" title="Reverse Engineering"></a><a href="https://github.com/ashishb/android-security-awesome#reverse-engineering" target="_blank" rel="noopener"></a><strong>Reverse Engineering</strong></h2><ol><li><a href="https://github.com/JesusFreke/smali" target="_blank" rel="noopener">Smali/Baksmali</a> – apk decompilation</li><li><a href="https://github.com/strazzere/Emacs-Smali" target="_blank" rel="noopener">emacs syntax coloring for smali files</a></li><li><a href="http://codetastrophe.com/smali.vim" target="_blank" rel="noopener">vim syntax coloring for smali files</a></li><li><a href="https://github.com/swdunlop/AndBug" target="_blank" rel="noopener">AndBug</a></li><li><a href="https://github.com/androguard/androguard" target="_blank" rel="noopener">Androguard</a> – powerful, integrates well with other tools</li><li><a href="https://ibotpeaches.github.io/Apktool/" target="_blank" rel="noopener">Apktool</a> – really useful for compilation/decompilation (uses smali)</li><li><a href="https://github.com/appknox/AFE" target="_blank" rel="noopener">Android Framework for Exploitation</a></li><li><a href="https://github.com/iSECPartners/Android-KillPermAndSigChecks" target="_blank" rel="noopener">Bypass signature and permission checks for IPCs</a></li><li><a href="https://github.com/iSECPartners/Android-OpenDebug" target="_blank" rel="noopener">Android OpenDebug</a> – make any application on device debuggable (using cydia substrate).</li><li><a href="http://siis.cse.psu.edu/dare/index.html" target="_blank" rel="noopener">Dare</a> – .dex to .class converter</li><li><a href="https://github.com/pxb1988/dex2jar" target="_blank" rel="noopener">Dex2Jar</a> – dex to jar converter</li><li><a href="https://github.com/google/enjarify" target="_blank" rel="noopener">Enjarify</a> – dex to jar converter from Google</li><li><a href="http://dedexer.sourceforge.net/" target="_blank" rel="noopener">Dedexer</a></li><li><a href="https://github.com/sysdream/fino" target="_blank" rel="noopener">Fino</a></li><li><a href="https://www.frida.re/" target="_blank" rel="noopener">Frida</a> – inject javascript to explore applications and a <a href="https://github.com/antojoseph/diff-gui" target="_blank" rel="noopener">GUI tool</a> for it</li><li><a href="https://bitbucket.org/aseemjakhar/indroid" target="_blank" rel="noopener">Indroid</a> – thread injection kit</li><li><a href="https://www.nccgroup.trust/us/about-us/resources/intent-sniffer/" target="_blank" rel="noopener">IntentSniffer</a></li><li><a href="https://github.com/iSECPartners/Introspy-Android" target="_blank" rel="noopener">Introspy</a></li><li><a href="https://varaneckas.com/jad/" target="_blank" rel="noopener">Jad</a> – Java decompiler</li><li><a href="https://github.com/java-decompiler/jd-gui" target="_blank" rel="noopener">JD-GUI</a> – Java decompiler</li><li><a href="http://www.benf.org/other/cfr/" target="_blank" rel="noopener">CFR</a> – Java decompiler</li><li><a href="https://github.com/Storyyeller/Krakatau" target="_blank" rel="noopener">Krakatau</a> – Java decompiler</li><li><a href="https://bitbucket.org/mstrobel/procyon/wiki/Java%20Decompiler" target="_blank" rel="noopener">Procyon</a> – Java decompiler</li><li><a href="https://github.com/fesh0r/fernflower" target="_blank" rel="noopener">FernFlower</a> – Java decompiler</li><li><a href="https://github.com/plum-umd/redexer" target="_blank" rel="noopener">Redexer</a> – apk manipulation</li><li><a href="http://blog.avlyun.com/wp-content/uploads/2014/04/SmaliViewer.zip" target="_blank" rel="noopener">Smali viewer</a></li><li><a href="https://github.com/CalebFenton/simplify" target="_blank" rel="noopener">Simplify Android deobfuscator</a></li><li><a href="https://github.com/Konloch/bytecode-viewer" target="_blank" rel="noopener">Bytecode viewer</a></li><li><a href="https://github.com/radare/radare2" target="_blank" rel="noopener">Radare2</a></li></ol><h2 id="Fuzz-Testing"><a href="#Fuzz-Testing" class="headerlink" title="Fuzz Testing"></a><a href="https://github.com/ashishb/android-security-awesome#fuzz-testing" target="_blank" rel="noopener"></a><strong>Fuzz Testing</strong></h2><ol><li><a href="https://www.nccgroup.trust/us/about-us/resources/intent-fuzzer/" target="_blank" rel="noopener">IntentFuzzer</a></li><li><a href="https://github.com/anestisb/radamsa-android" target="_blank" rel="noopener">Radamsa Fuzzer</a></li><li><a href="https://github.com/google/honggfuzz" target="_blank" rel="noopener">Honggfuzz</a></li><li><a href="https://github.com/anestisb/melkor-android" target="_blank" rel="noopener">An Android port of the melkor ELF fuzzer</a></li><li><a href="https://github.com/fuzzing/MFFA" target="_blank" rel="noopener">Media Fuzzing Framework for Android</a></li><li><a href="https://github.com/jonmetz/AndroFuzz" target="_blank" rel="noopener">AndroFuzz</a></li></ol><h2 id="App-Repackaging-Detectors"><a href="#App-Repackaging-Detectors" class="headerlink" title="App Repackaging Detectors"></a><a href="https://github.com/ashishb/android-security-awesome#app-repackaging-detectors" target="_blank" rel="noopener"></a><strong>App Repackaging Detectors</strong></h2><ol><li><a href="https://github.com/zyrikby/FSquaDRA" target="_blank" rel="noopener">FSquaDRA</a> – a Android Security tool for detection of repackaged Android applications based on app resources hash comparison.</li></ol><h2 id="Market-Crawlers"><a href="#Market-Crawlers" class="headerlink" title="Market Crawlers"></a><a href="https://github.com/ashishb/android-security-awesome#market-crawlers" target="_blank" rel="noopener"></a><strong>Market Crawlers</strong></h2><ol><li><a href="https://github.com/Akdeniz/google-play-crawler" target="_blank" rel="noopener">Google play crawler (Java)</a></li><li><a href="https://github.com/egirault/googleplay-api" target="_blank" rel="noopener">Google play crawler (Python)</a></li><li><a href="https://github.com/dweinstein/node-google-play" target="_blank" rel="noopener">Google play crawler (Node)</a> – get app details and download apps from official Google Play Store.</li><li><a href="https://github.com/dweinstein/node-aptoide" target="_blank" rel="noopener">Aptoide downloader (Node)</a> – download apps from Aptoide third-party Android market</li><li><a href="https://github.com/dweinstein/node-appland" target="_blank" rel="noopener">Appland downloader (Node)</a> – download apps from Appland third-party Android market</li></ol><h2 id="Misc-Tools"><a href="#Misc-Tools" class="headerlink" title="Misc Tools"></a><a href="https://github.com/ashishb/android-security-awesome#misc-tools" target="_blank" rel="noopener"></a><strong>Misc Tools</strong></h2><ol><li><a href="http://androidcracking.blogspot.com/2011/03/original-smalihook-java-source.html" target="_blank" rel="noopener">smalihook</a></li><li><a href="http://codekiem.com/2012/02/24/apk-downloader/" target="_blank" rel="noopener">APK-Downloader</a></li><li><a href="http://code.google.com/p/android4me/downloads/detail?name=AXMLPrinter2.jar" target="_blank" rel="noopener">AXMLPrinter2</a> – to convert binary XML files to human-readable XML files</li><li><a href="https://github.com/mbrubeck/android-completion" target="_blank" rel="noopener">adb autocomplete</a></li><li><a href="http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html" target="_blank" rel="noopener">Dalvik opcodes</a></li><li><a href="http://ww38.xchg.info/corkami/opcodes_tables.pdf" target="_blank" rel="noopener">Opcodes table for quick reference</a></li><li><a href="http://securitycompass.github.io/AndroidLabs/setup.html" target="_blank" rel="noopener">ExploitMe Android Labs</a> – for practice</li><li><a href="https://github.com/jackMannino/OWASP-GoatDroid-Project" target="_blank" rel="noopener">GoatDroid</a> – for practice</li><li><a href="https://github.com/mitmproxy/mitmproxy" target="_blank" rel="noopener">mitmproxy</a></li><li><a href="https://github.com/dweinstein/dockerfile-androguard" target="_blank" rel="noopener">dockerfile/androguard</a></li><li><a href="https://github.com/AndroidVTS/android-vts" target="_blank" rel="noopener">Android Vulnerability Test Suite</a> – android-vts scans a device for set of vulnerabilities</li><li><a href="https://github.com/dpnishant/appmon" target="_blank" rel="noopener">AppMon</a>– AppMon is an automated framework for monitoring and tampering system API calls of native macOS, iOS and android apps. It is based on Frida.</li></ol><h1 id="ACADEMIC-RESEARCH-PUBLICATIONS-BOOKS"><a href="#ACADEMIC-RESEARCH-PUBLICATIONS-BOOKS" class="headerlink" title="ACADEMIC / RESEARCH / PUBLICATIONS / BOOKS"></a><strong>ACADEMIC / RESEARCH / PUBLICATIONS / BOOKS</strong></h1><h2 id="Research-Papers"><a href="#Research-Papers" class="headerlink" title="Research Papers"></a><a href="https://github.com/ashishb/android-security-awesome#research-papers" target="_blank" rel="noopener"></a>Research Papers</h2><ol><li><a href="https://www.exploit-db.com/papers/" target="_blank" rel="noopener">Exploit Database</a></li><li><a href="https://github.com/jacobsoo/AndroidSlides" target="_blank" rel="noopener">Androidsecurity related presentations</a></li><li><a href="https://tthtlc.wordpress.com/2011/09/01/static-analysis-of-android-applications/" target="_blank" rel="noopener">A good collection of static analysis papers</a></li></ol><h2 id="Books"><a href="#Books" class="headerlink" title="Books"></a><a href="https://github.com/ashishb/android-security-awesome#books" target="_blank" rel="noopener"></a>Books</h2><ol><li><a href="https://www.securecoding.cert.org/confluence/display/android/Android+Secure+Coding+Standard" target="_blank" rel="noopener">SEI CERT Android Secure Coding Standard</a></li></ol><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a><a href="https://github.com/ashishb/android-security-awesome#others" target="_blank" rel="noopener"></a>Others</h2><ol><li><a href="https://github.com/OWASP/owasp-mstg" target="_blank" rel="noopener">OWASP Mobile Security Testing Guide Manual</a></li><li><a href="http://www.fasteque.com/android-reverse-engineering-101-part-1/" target="_blank" rel="noopener">Android Reverse Engineering 101 by Daniele Altomare</a></li><li><a href="https://github.com/doridori/Android-Security-Reference" target="_blank" rel="noopener">doridori/Android-Security-Reference</a></li><li><a href="https://github.com/b-mueller/android_app_security_checklist" target="_blank" rel="noopener">android app security checklist</a></li><li><a href="https://github.com/tanprathan/MobileApp-Pentest-Cheatsheet" target="_blank" rel="noopener">Mobile App Pentest Cheat Sheet</a></li></ol><h1 id="EXPLOITS-VULNERABILITIES-BUGS"><a href="#EXPLOITS-VULNERABILITIES-BUGS" class="headerlink" title="EXPLOITS / VULNERABILITIES / BUGS"></a><strong>EXPLOITS / VULNERABILITIES / BUGS</strong></h1><h2 id="List"><a href="#List" class="headerlink" title="List"></a><a href="https://github.com/ashishb/android-security-awesome#list" target="_blank" rel="noopener"></a><strong>List</strong></h2><ol><li><a href="https://source.android.com/security/bulletin/" target="_blank" rel="noopener">AndroidSecurity Bulletins</a></li><li><a href="https://www.cvedetails.com/vulnerability-list/vendor_id-1224/product_id-19997/Google-Android.html" target="_blank" rel="noopener">Android’s reported security vulnerabilities</a></li><li><a href="https://kb.androidtamer.com/Device_Security_Patch_tracker/" target="_blank" rel="noopener">Android Devices Security Patch Status</a></li><li><a href="https://code.google.com/p/android/issues/list?can=2&amp;q=priority=Critical&amp;sort=-opened" target="_blank" rel="noopener">AOSP – Issue tracker</a></li><li><a href="https://www.owasp.org/index.php/Mobile_Top_10_2016-Top_10" target="_blank" rel="noopener">OWASP Mobile Top 10 2016</a></li><li><a href="https://www.exploit-db.com/search/?action=search&amp;q=android" target="_blank" rel="noopener">Exploit Database</a> – click search</li><li><a href="https://docs.google.com/spreadsheet/pub?key=0Am5hHW4ATym7dGhFU1A4X2lqbUJtRm1QSWNRc3E0UlE&amp;single=true&amp;gid=0&amp;output=html" target="_blank" rel="noopener">Vulnerability Google Doc</a></li><li><a href="https://source.android.com/security/reports/Google_Android_Security_PHA_classifications.pdf" target="_blank" rel="noopener">Google AndroidSecurity Team’s Classifications for Potentially Harmful Applications (Malware)</a></li></ol><h2 id="Malware"><a href="#Malware" class="headerlink" title="Malware"></a><a href="https://github.com/ashishb/android-security-awesome#malware" target="_blank" rel="noopener"></a><strong>Malware</strong></h2><ol><li><a href="https://code.google.com/p/androguard/wiki/DatabaseAndroidMalwares" target="_blank" rel="noopener">androguard – Database Android Malwares wiki</a></li><li><a href="https://github.com/ashishb/android-malware" target="_blank" rel="noopener">Android Malware Github repo</a></li><li><a href="http://www.malgenomeproject.org/policy.html" target="_blank" rel="noopener">Android Malware Genome Project</a> – contains 1260 malware samples categorized into 49 different malware families, free for research purpose.</li><li><a href="http://contagiominidump.blogspot.com/" target="_blank" rel="noopener">Contagio Mobile Malware Mini Dump</a></li><li><a href="https://www.virustotal.com/en/about/contact/" target="_blank" rel="noopener">VirusTotal Malware Intelligence Service</a> – powered by VirusTotal, not free</li><li><a href="http://admire.necst.it/" target="_blank" rel="noopener">Admire</a></li><li><a href="https://www.sec.cs.tu-bs.de/~danarp/drebin/" target="_blank" rel="noopener">Drebin</a></li></ol><h2 id="Bounty-Programs"><a href="#Bounty-Programs" class="headerlink" title="Bounty Programs"></a><a href="https://github.com/ashishb/android-security-awesome#bounty-programs" target="_blank" rel="noopener"></a><strong>Bounty Programs</strong></h2><ol><li><a href="https://www.google.com/about/appsecurity/android-rewards/" target="_blank" rel="noopener">AndroidSecurity Reward Program</a></li></ol><h2 id="How-to-report"><a href="#How-to-report" class="headerlink" title="How to report"></a><a href="https://github.com/ashishb/android-security-awesome#how-to-report" target="_blank" rel="noopener"></a><strong>How to report</strong></h2><ol><li><a href="https://source.android.com/security/overview/updates-resources.html#report-issues" target="_blank" rel="noopener">Android – reporting security issues</a></li><li><a href="https://github.com/B3nac/Android-Reports-and-Resources" target="_blank" rel="noopener">Android Reports and Resources</a> – List of Android Hackerone disclosed reports and other resources  </li></ol><p>原文链接：<a href="https://gbhackers.com/android-security-penetration-testing/" target="_blank" rel="noopener">https://gbhackers.com/android-security-penetration-testing/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安卓渗透测试相关工具&quot;&gt;&lt;a href=&quot;#安卓渗透测试相关工具&quot; class=&quot;headerlink&quot; title=&quot;安卓渗透测试相关工具&quot;&gt;&lt;/a&gt;安卓渗透测试相关工具&lt;/h2&gt;&lt;p&gt;Android security testing is more often used by security industries to test the vulnerabilities in Android applications. Here you can find the Comprehensive Android Penetration testing tools and resource list that covers Performing Penetration testing Operation in Android Mobiles.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://blog.skys.top/tags/Android/"/>
    
      <category term="安全" scheme="https://blog.skys.top/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="工具" scheme="https://blog.skys.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Frida Hook尝试</title>
    <link href="https://blog.skys.top/2018/09/24/frida-hook/"/>
    <id>https://blog.skys.top/2018/09/24/frida-hook/</id>
    <published>2018-09-23T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.764Z</updated>
    
    <content type="html"><![CDATA[<h2 id="frida-hook相关安装使用说明"><a href="#frida-hook相关安装使用说明" class="headerlink" title="frida hook相关安装使用说明"></a>frida hook相关安装使用说明</h2><p><a href="https://www.frida.re/docs/installation/" target="_blank" rel="noopener">frida官方介绍</a><br><a href="https://github.com/frida/frida/releases/download/12.2.5/frida-server-12.2.5-android-x86.xz" target="_blank" rel="noopener">frida server</a></p><h2 id="安装环境及平台"><a href="#安装环境及平台" class="headerlink" title="安装环境及平台"></a>安装环境及平台</h2><ul><li>Windows</li><li>Android 模拟器</li></ul><a id="more"></a><h2 id="Windows下frida的安装"><a href="#Windows下frida的安装" class="headerlink" title="Windows下frida的安装"></a>Windows下frida的安装</h2><ul><li><p>直接pip执行命令如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install frida</span><br><span class="line">pip install frida-tools</span><br></pre></td></tr></table></figure></li><li><p>安装完成后，命令行输入如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida-ps</span><br></pre></td></tr></table></figure></li><li><p>PID  Name<br>13564  ApplicationFrameHost.exe<br>6628  ChsIME.exe<br>10356  ConEmu64.exe<br>13416  ConEmuC64.exe<br>6360  DesktopMgr64.exe<br>6336  Fiddler.exe<br>7876  Foxmail.exe<br>会显示对应进程信息等即表示安装成功</p><h2 id="Android下frida环境搭建"><a href="#Android下frida环境搭建" class="headerlink" title="Android下frida环境搭建"></a>Android下frida环境搭建</h2></li><li><p>查看对应手机或模拟器的cpu信息  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /prop</span><br><span class="line">cat cpuinfo</span><br></pre></td></tr></table></figure></li><li><p>由于使用的模拟器，默认是有root的，安卓版本4.4 下载的X86的server</p></li><li><p>下载对应版本的<a href="https://github.com/frida/frida/releases" target="_blank" rel="noopener">server</a>到手机并赋予执行权限，具体操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb push D:\Download\frida-server-12.2.5-android-x86 /data/local/tmp</span><br><span class="line">cd /data/local/tmp</span><br><span class="line">chmod 755 xxxxx</span><br><span class="line">./frida-server-12.2.5-android-x86</span><br></pre></td></tr></table></figure></li><li><p>运行后在pc端执行如下命令即可看到模拟器上的进程信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida-ps -U</span><br></pre></td></tr></table></figure></li><li><p>PID  Name<br>277  adbd<br>884  android.process.acore<br>961  android.process.media<br>704  com.anddoes.launcher<br>1042  com.android.calendar<br>1075  com.android.deskclock<br>1092  com.android.email<br>1115  com.android.exchange<br>1008  com.android.onetimeinitializer<br>866  com.android.phone<br>946  com.android.providers.calendar<br>至此，所有的基本准备工作已经完成。</p><h2 id="Hook脚本的编写及功能实现"><a href="#Hook脚本的编写及功能实现" class="headerlink" title="Hook脚本的编写及功能实现"></a>Hook脚本的编写及功能实现</h2></li><li>具体的可以参考官方的说明<a href="https://www.frida.re/docs/examples/android/" target="_blank" rel="noopener">文档</a></li><li><p>示例：测试<a href="https://github.com/ctfs/write-ups-2015/blob/master/seccon-quals-ctf-2015/binary/reverse-engineering-android-apk-1/rps.apk" target="_blank" rel="noopener">apk</a>，一个猜拳游戏。<br>代码部分：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import frida, sys</span><br><span class="line"></span><br><span class="line">def on_message(message, data):</span><br><span class="line">    if message[&apos;type&apos;] == &apos;send&apos;:</span><br><span class="line">        print(&quot;[*] &#123;0&#125;&quot;.format(message[&apos;payload&apos;]))</span><br><span class="line">    else:</span><br><span class="line">        print(message)</span><br><span class="line"></span><br><span class="line">jscode = &quot;&quot;&quot;</span><br><span class="line">Java.perform(function () &#123;</span><br><span class="line">    // Function to hook is defined here</span><br><span class="line">    var MainActivity = Java.use(&apos;com.example.seccon2015.rock_paper_scissors.MainActivity&apos;);</span><br><span class="line"></span><br><span class="line">    // Whenever button is clicked</span><br><span class="line">    MainActivity.onClick.implementation = function (v) &#123;</span><br><span class="line">        // Show a message to know that the function got called</span><br><span class="line">        send(&apos;onClick&apos;);</span><br><span class="line"></span><br><span class="line">        // Call the original onClick handler</span><br><span class="line">        this.onClick(v);</span><br><span class="line"></span><br><span class="line">        // Set our values after running the original onClick handler</span><br><span class="line">        this.m.value = 0;</span><br><span class="line">        this.n.value = 1;</span><br><span class="line">        this.cnt.value = 999;</span><br><span class="line"></span><br><span class="line">        // Log to the console that it&apos;s done, and we should have the flag!</span><br><span class="line">        console.log(&apos;Done:&apos; + JSON.stringify(this.cnt));</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;);</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">process = frida.get_usb_device().attach(&apos;com.example.seccon2015.rock_paper_scissors&apos;)</span><br><span class="line">script = process.create_script(jscode)</span><br><span class="line">script.on(&apos;message&apos;, on_message)</span><br><span class="line">print(&apos;[*] Running CTF&apos;)</span><br><span class="line">script.load()</span><br><span class="line">sys.stdin.read()</span><br></pre></td></tr></table></figure></li><li><p>运行上述脚本，结果报错：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  File &quot;C:\Python27\lib\site-packages\frida\core.py&quot;, line 110, in attach</span><br><span class="line">    return Session(self._impl.attach(self._pid_of(target)))</span><br><span class="line">frida.TransportError: the connection is closed</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Frida:ERROR:../../../frida-core/src/linux/frida-helper-service-glue.c:2987:frida_resolve_library_function: assertion failed (local_library_path == remote_library_path): (&quot;/system/lib/libc.so&quot; == &quot;/system/lib/arm/libc.so&quot;)</span><br></pre></td></tr></table></figure><p>最后搜索发现是<a href="https://github.com/frida/frida/issues/295" target="_blank" rel="noopener">不支持模拟器</a>，本次使用的frida均是最新版12.2.5，有时间再后续折腾吧。</p><ul><li><p>后续更换sdk为官方的sdk，并使用低版本的运行，没有报原来的错误了。但是又出现了新的错误如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">File &quot;C:\Python27\lib\site-packages\frida\core.py&quot;, line 97, in attach</span><br><span class="line">    return Session(self._impl.attach(self._pid_of(target)))</span><br><span class="line">frida.ProcessNotRespondingError: timed out while waiting for session to establish</span><br></pre></td></tr></table></figure></li><li><p>算了 懒的折腾了，后面还是等真机了再搞。</p></li><li>后续在实际使用中，frida 还是非常强大的，相对xposed等更为便捷。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;frida-hook相关安装使用说明&quot;&gt;&lt;a href=&quot;#frida-hook相关安装使用说明&quot; class=&quot;headerlink&quot; title=&quot;frida hook相关安装使用说明&quot;&gt;&lt;/a&gt;frida hook相关安装使用说明&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.frida.re/docs/installation/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;frida官方介绍&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/frida/frida/releases/download/12.2.5/frida-server-12.2.5-android-x86.xz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;frida server&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装环境及平台&quot;&gt;&lt;a href=&quot;#安装环境及平台&quot; class=&quot;headerlink&quot; title=&quot;安装环境及平台&quot;&gt;&lt;/a&gt;安装环境及平台&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;li&gt;Android 模拟器&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Hook" scheme="https://blog.skys.top/tags/Hook/"/>
    
      <category term="Frida" scheme="https://blog.skys.top/tags/Frida/"/>
    
  </entry>
  
  <entry>
    <title>VDEX file</title>
    <link href="https://blog.skys.top/2018/08/29/vdex-file/"/>
    <id>https://blog.skys.top/2018/08/29/vdex-file/</id>
    <published>2018-08-28T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.769Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从vdex文件中提取dex文件"><a href="#从vdex文件中提取dex文件" class="headerlink" title="从vdex文件中提取dex文件"></a>从vdex文件中提取dex文件</h2><p>android 8.0引入了 vdex文件</p><blockquote><p>相关参考链接说明</p><blockquote><p><a href="https://blog.csdn.net/xiashaohua/article/details/75315261" target="_blank" rel="noopener">android8.0的vdex文件格式分析</a><br><a href="https://android-review.googlesource.com/c/platform/art/+/264514" target="_blank" rel="noopener">Introduce VDEX file, use it for DEX files</a>  </p></blockquote></blockquote><p>分析华为的某个系统应用时，发现提取出来的apk都是没有dex文件的。<br>对应的类似目录结构如下：<br><img src="/img/img_files/DC4E54E931F292A086629EA39E1B7579" alt=""><br><img src="/img/img_files/37631AB606827FE93EC34200CC5C1EFE" alt=""></p><p>关键代码在oat目录下的vdex文件中。<br>对应的vdex文件，可以通过以下工具提取dex文件：<br><a href="https://github.com/anestisb/vdexExtractor" target="_blank" rel="noopener">https://github.com/anestisb/vdexExtractor</a><br>下面贴个本地编译后的文件，实测可以正常提取。<br><img src="/img/img_files/758148986A9FA2BBAFE7676B816E5539" alt=""><br>文件下载：<a href="/files/vdexExtractor">vdexExtractor</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;从vdex文件中提取dex文件&quot;&gt;&lt;a href=&quot;#从vdex文件中提取dex文件&quot; class=&quot;headerlink&quot; title=&quot;从vdex文件中提取dex文件&quot;&gt;&lt;/a&gt;从vdex文件中提取dex文件&lt;/h2&gt;&lt;p&gt;android 8.0引入了 vde
      
    
    </summary>
    
    
      <category term="Android" scheme="https://blog.skys.top/tags/Android/"/>
    
      <category term="vdex" scheme="https://blog.skys.top/tags/vdex/"/>
    
  </entry>
  
  <entry>
    <title>常用工具收集</title>
    <link href="https://blog.skys.top/2018/06/18/usefultools/"/>
    <id>https://blog.skys.top/2018/06/18/usefultools/</id>
    <published>2018-06-17T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="匿名及各类实用工具收集"><a href="#匿名及各类实用工具收集" class="headerlink" title="匿名及各类实用工具收集"></a>匿名及各类实用工具收集</h2><h1 id="身份生成器"><a href="#身份生成器" class="headerlink" title="身份生成器"></a>身份生成器</h1><ul><li><a href="https://www.fakenamegenerator.com/" target="_blank" rel="noopener">Fake Name Generator</a> </li></ul><h1 id="匿名电子邮箱"><a href="#匿名电子邮箱" class="headerlink" title="匿名电子邮箱"></a>匿名电子邮箱</h1><ul><li><a href="https://protonmail.com/" target="_blank" rel="noopener">ProtonMail</a> </li><li><a href="https://www.mail.com/" target="_blank" rel="noopener">mail.com</a></li></ul><h1 id="临时、一次性、匿名邮箱"><a href="#临时、一次性、匿名邮箱" class="headerlink" title="临时、一次性、匿名邮箱"></a>临时、一次性、匿名邮箱</h1><pre><code>http://24mail.chacuo.net/</code></pre><p>　　临时电子邮箱,十分钟邮箱(10分钟),临时邮,临时Email,快速注册Email,24小时邮箱<br><a id="more"></a><br>    <a href="http://www.yopmail.com/" target="_blank" rel="noopener">http://www.yopmail.com/</a></p><p>　　YOPmail 临时、匿名的免费邮箱地址。</p><pre><code>https://10minutemail.net/</code></pre><p>　　10分钟邮箱: 安全免费的一次性临时电邮地址</p><pre><code>https://10minutemail.org/</code></pre><p>　　10分钟邮箱: 安全免费的一次性临时电邮地址</p><pre><code>https://linshiyou.com/</code></pre><p>　　临时邮箱,10分钟邮箱,24小时邮箱</p><pre><code>https://www.guerrillamail.com/</code></pre><p>　　Guerrilla Mail - Disposable Temporary E-Mail Address</p><p>　　提示：ProtonMail 人机验证可用 guerrillamail.org 后缀。</p><pre><code>https://www.moakt.com/</code></pre><p>　　Moakt Email | 临时邮箱专业服务</p><pre><code>https://temp-mail.org/</code></pre><p>　　Temp Mail - Disposable Temporary Email</p><pre><code>http://www.fakemailgenerator.com/</code></pre><p>　　Fake Mail Generator - Free temporary email addresses</p><h1 id="手机、短信验证码平台"><a href="#手机、短信验证码平台" class="headerlink" title="手机、短信验证码平台"></a>手机、短信验证码平台</h1><pre><code>http://www.smszk.com/</code></pre><p>　　在线短信验证码接收，手机验证码短信接收平台，最好用的免费云短信网站！</p><pre><code>https://sms.cm/</code></pre><p>　　云短信 - 免费在线短信接收，国内免费临时手机号</p><pre><code>https://sms.cngrok.com/receiving-sms/</code></pre><p>　　短信码上到-掠影网络，国内临时接码的</p><pre><code>https://www.becmd.com/</code></pre><p>　　免费接码 - 免费短信验证码接收平台</p><pre><code>https://www.pdflibr.com/</code></pre><p>　　云短信 - 在线短信接收 中国,美国,菲律宾</p><pre><code>https://yunduanxin.net/</code></pre><p>　　免费接短信,在线接收短信验证码 - 云短信帮助您从世界任何地方接收手机短信</p><pre><code>http://hs3x.com/</code></pre><p>　　Receive SMS Online For Free - Free Virtual Numbers</p><p>　　美国,英国,奥地利,瑞典,比利时</p><pre><code>http://receivefreesms.com/</code></pre><p>　　Receive FREE SMS online</p><p>　　美国,英国,挪威,瑞典,荷兰,澳大利亚,匈牙利,立陶宛,香港等</p><pre><code>http://receivefreesms.net/</code></pre><p>　　Receive-SMS-Now - 美国,加拿大,西班牙</p><pre><code>http://receiveonlinesms.biz/</code></pre><p>　　Receive Online SMS - 美国,瑞典,挪威,西班牙,英国</p><pre><code>http://receiveonlinesms.com/</code></pre><p>　　Receive SMS Online - 国外免费临时手机号</p><pre><code>http://receive-sms-online.com/</code></pre><p>　　Receive SMS Online - 俄国,英国,乌克兰</p><pre><code>http://receivesmsonline.in/</code></pre><p>　　Receive SMS Online - 美国,加拿大,西班牙</p><pre><code>http://receivesmsverification.com/</code></pre><p>　　Receive SMS - 比利时,英国,美国</p><pre><code>http://sms.sellaite.com/</code></pre><p>　　SELLAITE - 爱沙尼亚</p><pre><code>http://www.freesmsverifications.com/</code></pre><p>　　Receive Free SMS - 美国,英国,法国,波兰,比利时,加拿大</p><pre><code>http://www.receive-sms-now.com/</code></pre><p>　　Receive-SMS-Now - 美国,加拿大,荷兰</p><pre><code>http://www.shejiinn.com/</code></pre><p>　　免费接码|短信验证码|在线接收短信|接码平台 - 中国,缅甸,美国</p><pre><code>http://z-sms.com/</code></pre><p>　　Z-SMS - 中国,美国,缅甸,爱沙尼亚</p><pre><code>https://ch.freephonenum.com/</code></pre><p>　　FreePhonenum - 国外免费临时手机号（中文）美国,加拿大(支持免费发短信)</p><pre><code>https://receive-a-sms.com/</code></pre><p>　　Receive a SMS Online</p><p>　　美国,澳大利亚,挪威,奥地利,巴西,香港,南非,波兰,英国,加拿大</p><pre><code>https://receive-sms.com/</code></pre><p>　　Receive-SMS - 美国</p><pre><code>https://smsnumbersonline.com/</code></pre><p>　　Free SMS Numbers Online - 美国,英国,加拿大,波兰</p><pre><code>https://sms-online.co/receive-free-sms/</code></pre><p>　　Receive SMS online for Free</p><p>　　美国,英国,加拿大,瑞典,法国,马来西亚,印度尼西亚</p><pre><code>https://sms-receive.net/</code></pre><p>　　SMS-Receive - 俄罗斯,法国,罗马尼亚,西班牙,荷兰,英国</p><pre><code>https://smsreceivefree.com/</code></pre><p>　　SMSReceiveFree - 美国,英国,加拿大</p><pre><code>https://www.freeonlinephone.org/</code></pre><p>　　Free Online Phone - 美国,加拿大,英国,瑞典</p><pre><code>https://www.pinger.com/text-free/</code></pre><p>　　Textfree</p><pre><code>https://www.receivesms.co/</code></pre><p>　　Receive SMS Online</p><p>　　美国,奥地利,比利时,加拿大,瑞士,丹麦,西班牙,英国,意大利,波兰,葡萄牙,瑞典等</p><pre><code>https://www.receivesms.net/</code></pre><p>　　Receive SMS Online - 国外免费临时手机号</p><pre><code>https://www.receive-sms-online.info/</code></pre><p>　　Receive SMS Online for FREE</p><p>　　英国,罗马尼亚,美国,西班牙,法国,德国,俄罗斯</p><pre><code>https://www.receivesmsonline.net/</code></pre><p>　　RECEIVE SMS ONLINE - 美国,加拿大,英国</p><pre><code>https://www.textnow.com/</code></pre><p>　　TextNow - 美国</p><pre><code>https://www.twilio.com/</code></pre><p>　　Twilio - 用于SMS，语音，视频和身份验证的通信API。支持API调用，看上去很不错。</p><pre><code>https://zh.mytrashmobile.com/</code></pre><p>　　MyTrashmobile - 美国,英国,加拿大</p><p><a href="https://lcx.cc/post/4594/" target="_blank" rel="noopener">原始参考链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;匿名及各类实用工具收集&quot;&gt;&lt;a href=&quot;#匿名及各类实用工具收集&quot; class=&quot;headerlink&quot; title=&quot;匿名及各类实用工具收集&quot;&gt;&lt;/a&gt;匿名及各类实用工具收集&lt;/h2&gt;&lt;h1 id=&quot;身份生成器&quot;&gt;&lt;a href=&quot;#身份生成器&quot; class=&quot;headerlink&quot; title=&quot;身份生成器&quot;&gt;&lt;/a&gt;身份生成器&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fakenamegenerator.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fake Name Generator&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;匿名电子邮箱&quot;&gt;&lt;a href=&quot;#匿名电子邮箱&quot; class=&quot;headerlink&quot; title=&quot;匿名电子邮箱&quot;&gt;&lt;/a&gt;匿名电子邮箱&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://protonmail.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ProtonMail&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mail.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mail.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;临时、一次性、匿名邮箱&quot;&gt;&lt;a href=&quot;#临时、一次性、匿名邮箱&quot; class=&quot;headerlink&quot; title=&quot;临时、一次性、匿名邮箱&quot;&gt;&lt;/a&gt;临时、一次性、匿名邮箱&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;http://24mail.chacuo.net/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;　　临时电子邮箱,十分钟邮箱(10分钟),临时邮,临时Email,快速注册Email,24小时邮箱&lt;br&gt;
    
    </summary>
    
    
      <category term="tools" scheme="https://blog.skys.top/tags/tools/"/>
    
      <category term="safe" scheme="https://blog.skys.top/tags/safe/"/>
    
  </entry>
  
  <entry>
    <title>Android 逆向分析工具集合汇总</title>
    <link href="https://blog.skys.top/2018/06/12/android-tools/"/>
    <id>https://blog.skys.top/2018/06/12/android-tools/</id>
    <published>2018-06-11T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.762Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用分析工具及相关开源项目介绍（持续更新）"><a href="#常用分析工具及相关开源项目介绍（持续更新）" class="headerlink" title="常用分析工具及相关开源项目介绍（持续更新）"></a>常用分析工具及相关开源项目介绍（持续更新）</h1><hr><h2 id="静态分析工具"><a href="#静态分析工具" class="headerlink" title="静态分析工具"></a>静态分析工具</h2><h3 id="代码反编译工具"><a href="#代码反编译工具" class="headerlink" title="代码反编译工具"></a>代码反编译工具</h3><ul><li>androguard</li><li>重打包工具</li></ul><h2 id="动态分析工具"><a href="#动态分析工具" class="headerlink" title="动态分析工具"></a>动态分析工具</h2><ul><li><a href="https://github.com/Genymobile/gnirehtet" target="_blank" rel="noopener">gnirehtet</a><br>Gnirehtet是一个可以实现安卓手机通过usb连接电脑上网的工具，我们知道RNDIS驱动可以实现电脑通过<br>USB连接手机并使用手机网络上网，Gnirehtet则是反其道而行，很适合没有无线网络、电脑没有无线网卡<br>但是需要手机上网时使用。Gnirehtet有Java版和Rust 版，Java版需要JDK，Rust 版则不需要，推荐使用Rust版。</li></ul><a id="more"></a><h2 id="综合分析工具"><a href="#综合分析工具" class="headerlink" title="综合分析工具"></a>综合分析工具</h2><ol><li><p><a href="https://github.com/androguard/androguard" target="_blank" rel="noopener">androguard</a>-<a href="http://androguard.readthedocs.io/en/latest/intro/index.html" target="_blank" rel="noopener">使用说明</a><br>可以很方便的解析apk文件，获取相关的各项信息<br>Androguard is a full python tool to play with Android files.  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install: pip install -U androguard</span><br></pre></td></tr></table></figure></li><li><p>yara</p></li><li><a href="https://github.com/vaibhavpandeyvpz/apkstudio" target="_blank" rel="noopener">apkstudio</a><br>A Cross-Platform IDE for Reverse-Engineering (Disassembling, Hacking &amp; Rebuilding) Android applications - featuring<br>a friendly UI and Code editor with Syntax-highlighting support</li><li><a href="https://github.com/cryptax/androidre" target="_blank" rel="noopener">androidre</a><br>docker镜像，一个工具集合包，包含较多常用分析工具。</li><li>待续</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;常用分析工具及相关开源项目介绍（持续更新）&quot;&gt;&lt;a href=&quot;#常用分析工具及相关开源项目介绍（持续更新）&quot; class=&quot;headerlink&quot; title=&quot;常用分析工具及相关开源项目介绍（持续更新）&quot;&gt;&lt;/a&gt;常用分析工具及相关开源项目介绍（持续更新）&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;静态分析工具&quot;&gt;&lt;a href=&quot;#静态分析工具&quot; class=&quot;headerlink&quot; title=&quot;静态分析工具&quot;&gt;&lt;/a&gt;静态分析工具&lt;/h2&gt;&lt;h3 id=&quot;代码反编译工具&quot;&gt;&lt;a href=&quot;#代码反编译工具&quot; class=&quot;headerlink&quot; title=&quot;代码反编译工具&quot;&gt;&lt;/a&gt;代码反编译工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;androguard&lt;/li&gt;
&lt;li&gt;重打包工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;动态分析工具&quot;&gt;&lt;a href=&quot;#动态分析工具&quot; class=&quot;headerlink&quot; title=&quot;动态分析工具&quot;&gt;&lt;/a&gt;动态分析工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Genymobile/gnirehtet&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gnirehtet&lt;/a&gt;&lt;br&gt;Gnirehtet是一个可以实现安卓手机通过usb连接电脑上网的工具，我们知道RNDIS驱动可以实现电脑通过&lt;br&gt;USB连接手机并使用手机网络上网，Gnirehtet则是反其道而行，很适合没有无线网络、电脑没有无线网卡&lt;br&gt;但是需要手机上网时使用。Gnirehtet有Java版和Rust 版，Java版需要JDK，Rust 版则不需要，推荐使用Rust版。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Android" scheme="https://blog.skys.top/tags/Android/"/>
    
      <category term="逆向" scheme="https://blog.skys.top/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>hexo install and new</title>
    <link href="https://blog.skys.top/2018/05/08/hexo-install-new/"/>
    <id>https://blog.skys.top/2018/05/08/hexo-install-new/</id>
    <published>2018-05-07T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo安装搭建个人博客"><a href="#hexo安装搭建个人博客" class="headerlink" title="hexo安装搭建个人博客"></a>hexo安装搭建个人博客</h2><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli g</span><br><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure><h2 id="初始化博客文件夹"><a href="#初始化博客文件夹" class="headerlink" title="初始化博客文件夹"></a>初始化博客文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><h2 id="切换到该路径"><a href="#切换到该路径" class="headerlink" title="切换到该路径"></a>切换到该路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure><h2 id="安装hexo的扩展插件"><a href="#安装hexo的扩展插件" class="headerlink" title="安装hexo的扩展插件"></a>安装hexo的扩展插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="安装其它插件"><a href="#安装其它插件" class="headerlink" title="安装其它插件"></a>安装其它插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><hr><h2 id="文章的发布"><a href="#文章的发布" class="headerlink" title="文章的发布"></a>文章的发布</h2><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a>  </p><p>在实际发布过程中，上述操作可以简短方式书写如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp; hexo g &amp; hexo s</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p><p><a href="https://blog.csdn.net/y_z_w123/article/details/78801096" target="_blank" rel="noopener">参考链接</a>  <a href="https://blog.csdn.net/qq_33858250/article/details/79308875" target="_blank" rel="noopener">参考链接</a>  <a href="http://yangbingdong.com/2017/build-blog-hexo-base/" target="_blank" rel="noopener">参考链接</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;hexo安装搭建个人博客&quot;&gt;&lt;a href=&quot;#hexo安装搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;hexo安装搭建个人博客&quot;&gt;&lt;/a&gt;hexo安装搭建个人博客&lt;/h2&gt;&lt;h2 id=&quot;安装hexo&quot;&gt;&lt;a href=&quot;#安装hexo&quot; class=&quot;headerlink&quot; title=&quot;安装hexo&quot;&gt;&lt;/a&gt;安装hexo&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-cli g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;初始化博客文件夹&quot;&gt;&lt;a href=&quot;#初始化博客文件夹&quot; class=&quot;headerlink&quot; title=&quot;初始化博客文件夹&quot;&gt;&lt;/a&gt;初始化博客文件夹&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;切换到该路径&quot;&gt;&lt;a href=&quot;#切换到该路径&quot; class=&quot;headerlink&quot; title=&quot;切换到该路径&quot;&gt;&lt;/a&gt;切换到该路径&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; blog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装hexo的扩展插件&quot;&gt;&lt;a href=&quot;#安装hexo的扩展插件&quot; class=&quot;headerlink&quot; title=&quot;安装hexo的扩展插件&quot;&gt;&lt;/a&gt;安装hexo的扩展插件&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://blog.skys.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>路由器刷机实践</title>
    <link href="https://blog.skys.top/2018/03/23/k2p-breed/"/>
    <id>https://blog.skys.top/2018/03/23/k2p-breed/</id>
    <published>2018-03-22T17:47:13.000Z</published>
    <updated>2019-11-27T09:14:31.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="K2P刷第三方固件，实现更强大的功能"><a href="#K2P刷第三方固件，实现更强大的功能" class="headerlink" title="K2P刷第三方固件，实现更强大的功能"></a>K2P刷第三方固件，实现更强大的功能</h2><blockquote><p>不久前撸了个K2P，安全下车后。想着硬件还行，只是用做普通路由功能，未免有点浪费，故有了此文章。 </p></blockquote><p>主要用于记录自己作为萌新的刷机操作，主要包含以下几个方面：<br>官方原版固件，Telnet刷官改，官改有breed后刷其他固件。<br>由于刷机前，固件已经升级到了最新版本后的，要刷其他固件要激活Telnet。  </p><p>具体参考如下教程：<br><a href="http://www.right.com.cn/forum/thread-261028-1-3.html" target="_blank" rel="noopener">参考教程1</a><br><a href="http://www.right.com.cn/forum/thread-221578-1-1.html" target="_blank" rel="noopener">参考教程2</a><br>下载对应的工具， csdn下载链接如下：<br><a href="https://download.csdn.net/download/chicui7875/10141826?web=web" target="_blank" rel="noopener">download</a>  </p><ol><li>开启windows的Telnet服务，关闭防火墙，工具要收包 (很重要)。  </li><li>路由器不插wan口。  </li><li>路由器上电刚启动，完成初始化，路由可用 (很重要，否则成功率不能保证)。<br>以K2P为例，当路由器由红灯变为黄灯时（没网，有网变绿灯，不要插Wan口线），立即点击程序的打开Telnet 按钮。 <a id="more"></a>成功后如下图所示： </li></ol><p><img src="/img/img_files/D794BB2A3612B7BDC3C2EF20A20CABB6" alt=""> </p><p>然后终端Telnet进行连接，连接后可以正常插入wan口网线，使之能够正常上网。 成功连接登录后如下图： </p><p><img src="/img/img_files/EC5B3500DE8C2B7EBA6DE77EB47C98E6" alt=""> </p><p>然后执行如下命令的脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://iytc.net/tools/k2p.sh -O - |sh</span><br></pre></td></tr></table></figure></p><p>执行后，路由器会下载固件并自动刷写，完成后会自动重启，命令执行结果应该如下图类似： </p><p><img src="/img/img_files/38D9A061A97F69DCB500CADFD6640A45" alt=""> </p><p><img src="/img/img_files/D7A2DE2E9953956C68709A2A320189FF" alt=""> </p><p>注意： 刷入之后建议K2P恢复一次出厂设置，并且清除计算机浏览器的缓存，否则有可能出现一些莫名其妙的问题（比如无线不稳定、点击新功能返回主页等）！！！<br>完成之后，路由器即自动刷上官方修改版本的固件，对应的下载地址：<a href="http://woo.iytc.net/?dir=uploads/K2P_MTK" target="_blank" rel="noopener">http://woo.iytc.net/?dir=uploads/K2P_MTK</a><br>重新进入路由器可以看到，官方修改版本界面和之前的没有太大出入，但是新增了部分的功能，如下图： </p><p><img src="/img/img_files/137AFD33C0A12AE386313050FC8E40D3" alt=""> </p><p>多了广告屏蔽，SSR，KMS等功能，但是我们的目的不在于此。此次刷机主要是为了设置VPN 服务器，方便后续的云免流服务搭建等。 </p><p><img src="/img/img_files/68A2D482A7D04E71D1DCE3567095DA82" alt=""> </p><p>至此，第一大步已经完成，可以开始刷K2P的其他固件。<br>刷其他固件要进入相应的breed界面，具体的操作方式如下：<br>Opboot及Breed进入方法：<br>如果你当前是官改或其他第三方固件，请在opboot或breed输入  </p><ul><li>1、计算机设置为自动获取IP，计算机网线连接K2P的任一LAN口  </li><li>2、K2P断电，按住K2P复位键，K2P开电，按住10秒后放开  </li><li>3、访问<a href="http://192.168.1.1，可刷入K2P的任何版本" target="_blank" rel="noopener">http://192.168.1.1，可刷入K2P的任何版本</a>  </li><li>4、重新启动后建议K2P恢复一次出厂设置<br>按上述操作，进入后界面如下：  </li></ul><p><img src="/img/img_files/62E40823FC05C4C1DF9FFE352362F130" alt=""> </p><p>选择下载好的对应的固件，上传更新即可。<br>对应的固件下载地址为： <a href="http://www.right.com.cn/forum/thread-218704-1-1.html" target="_blank" rel="noopener">http://www.right.com.cn/forum/thread-218704-1-1.html</a>  </p><p><img src="/img/img_files/5AF2A418015D88AB148FBE395921D6EB" alt=""> </p><p><img src="/img/img_files/B55A8E9CF556AEA5F41CDF7F287DB9EE" alt=""> </p><p>更新完成后，重启即是新的固件了，结果如下图，默认账号admin：  </p><p><img src="/img/img_files/4DE3FB29CC93D8790AA42322A7F1F56A" alt=""> </p><p>可以看到的是，新的固件支持vpn服务器的设置，后续免流方案的实施待续……<br>相关参考链接：<br><a href="http://www.right.com.cn/forum/thread-221578-1-1.html" target="_blank" rel="noopener">http://www.right.com.cn/forum/thread-221578-1-1.html</a><br><a href="http://www.right.com.cn/forum/thread-261028-1-3.html" target="_blank" rel="noopener">http://www.right.com.cn/forum/thread-261028-1-3.html</a><br><a href="http://www.right.com.cn/forum/thread-218704-1-1.html" target="_blank" rel="noopener">http://www.right.com.cn/forum/thread-218704-1-1.html</a><br><a href="http://www.right.com.cn/forum/thread-260713-1-1.html" target="_blank" rel="noopener">http://www.right.com.cn/forum/thread-260713-1-1.html</a><br><a href="http://woo.iytc.net/?dir=uploads/K2P_MTK" target="_blank" rel="noopener">http://woo.iytc.net/?dir=uploads/K2P_MTK</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;K2P刷第三方固件，实现更强大的功能&quot;&gt;&lt;a href=&quot;#K2P刷第三方固件，实现更强大的功能&quot; class=&quot;headerlink&quot; title=&quot;K2P刷第三方固件，实现更强大的功能&quot;&gt;&lt;/a&gt;K2P刷第三方固件，实现更强大的功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;不久前撸了个K2P，安全下车后。想着硬件还行，只是用做普通路由功能，未免有点浪费，故有了此文章。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要用于记录自己作为萌新的刷机操作，主要包含以下几个方面：&lt;br&gt;官方原版固件，Telnet刷官改，官改有breed后刷其他固件。&lt;br&gt;由于刷机前，固件已经升级到了最新版本后的，要刷其他固件要激活Telnet。  &lt;/p&gt;
&lt;p&gt;具体参考如下教程：&lt;br&gt;&lt;a href=&quot;http://www.right.com.cn/forum/thread-261028-1-3.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考教程1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.right.com.cn/forum/thread-221578-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考教程2&lt;/a&gt;&lt;br&gt;下载对应的工具， csdn下载链接如下：&lt;br&gt;&lt;a href=&quot;https://download.csdn.net/download/chicui7875/10141826?web=web&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;download&lt;/a&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开启windows的Telnet服务，关闭防火墙，工具要收包 (很重要)。  &lt;/li&gt;
&lt;li&gt;路由器不插wan口。  &lt;/li&gt;
&lt;li&gt;路由器上电刚启动，完成初始化，路由可用 (很重要，否则成功率不能保证)。&lt;br&gt;以K2P为例，当路由器由红灯变为黄灯时（没网，有网变绿灯，不要插Wan口线），立即点击程序的打开Telnet 按钮。
    
    </summary>
    
    
      <category term="k2p" scheme="https://blog.skys.top/tags/k2p/"/>
    
      <category term="刷机" scheme="https://blog.skys.top/tags/%E5%88%B7%E6%9C%BA/"/>
    
      <category term="路由器" scheme="https://blog.skys.top/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>《No Game No Life Zero》</title>
    <link href="https://blog.skys.top/2018/03/11/ys-nogame/"/>
    <id>https://blog.skys.top/2018/03/11/ys-nogame/</id>
    <published>2018-03-10T18:36:49.000Z</published>
    <updated>2019-11-27T09:14:31.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/6015D53EBC29424ED4ECE586680927A6" alt=""></h2><p>我所祈愿的——只是与你一起活下去。 这是一个禁止一切争端、一切皆由游戏决定的“盘上世界”被创造出来以前的故事。 围绕着一统世界的唯一神的宝座，看不到尽头的大战延续的时代。 天地割裂，甚至连繁星都被毁灭殆尽的凄惨战争， 毫无还手之力的人类在战争中一个个死去。 被拥有强大力量的各个种族逼入绝境， 人类濒临存亡，此时率领着人类的年轻领袖名叫里克。 他为了即使再多一人能够迎来明天而呕心沥血，日渐憔悴， 就在这样的某一天，里克在被弃置的森精种的都城遇到了机凯种少女休比。 对于机械所不该拥有的心产生兴趣而发生故障， 被同伴抛弃的休比，为了修复故障，而拜托里克把“人类的心”告诉自己，但…… 这是在距今超过六千年的远古编织而成的通往“最新神话”的“最初神话”。没有留下记录也没有留下记忆，没有对任何人诉说过的物语，现在开幕——<br><a href="https://www.bilibili.com/video/av20516795" target="_blank" rel="noopener">https://www.bilibili.com/video/av20516795</a>  </p><blockquote><p>有泪点</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/6015D53EBC29424ED4ECE586680927A6&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;我所祈愿的——只是与你一
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="观影分享" scheme="https://blog.skys.top/tags/%E8%A7%82%E5%BD%B1%E5%88%86%E4%BA%AB/"/>
    
      <category term="影视分享" scheme="https://blog.skys.top/tags/%E5%BD%B1%E8%A7%86%E5%88%86%E4%BA%AB/"/>
    
      <category term="动漫" scheme="https://blog.skys.top/tags/%E5%8A%A8%E6%BC%AB/"/>
    
  </entry>
  
  <entry>
    <title>markdown just for test</title>
    <link href="https://blog.skys.top/2018/03/03/markdown-sample/"/>
    <id>https://blog.skys.top/2018/03/03/markdown-sample/</id>
    <published>2018-03-02T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="示例：这里是主标题"><a href="#示例：这里是主标题" class="headerlink" title="示例：这里是主标题"></a>示例：这里是主标题</h1><h2 id="示例：这里是副标题"><a href="#示例：这里是副标题" class="headerlink" title="示例：这里是副标题"></a>示例：这里是副标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><ul><li>无序列表1</li><li>无序列表2<a id="more"></a></li><li>无序列表3</li></ul><ul><li>无序列表4</li></ul><ul><li>无序列表5</li></ul><hr><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><ol><li>有序列表1</li><li>有序列表2</li><li>有序列表3</li></ol><hr><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>这是表格  居中对齐</p><table><thead><tr><th style="text-align:center">姓名</th><th style="text-align:center">性别</th><th style="text-align:center">年龄</th><th style="text-align:center">分数</th></tr></thead><tbody><tr><td style="text-align:center">张三</td><td style="text-align:center">男</td><td style="text-align:center">8</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">李四</td><td style="text-align:center">女</td><td style="text-align:center">20</td><td style="text-align:center">90</td></tr></tbody></table><hr><p>文字引用：</p><blockquote><p>床前明月光，疑似地上霜。</p><blockquote><p>呵呵</p></blockquote></blockquote><hr><p>分割线</p><hr><hr><details><summary>折叠标题Title</summary>被折叠内容content!!!</details>  <hr><div style="display: none">2018-01-03&gt; <strong> </strong>&gt;&gt;  内容注释掉不显示</div><hr><p>待办列表：</p><ul><li style="list-style: none"><input type="checkbox"> 不勾选  </li><li style="list-style: none"><input type="checkbox" checked> 勾选  </li></ul><hr><p>tags 2种方式：<br>[tag1,tag2,tag3]<br>上面中括号和用-均可</p><hr><p><em>斜体</em>  </p><p><strong>粗体</strong>  </p><p><strong><em>斜体加粗</em></strong></p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a><del>删除线</del></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里是代码片段</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这里也是代码片段</span><br></pre></td></tr></table></figure><hr><pre><code>http://www.example.com</code></pre><p><img src="/img/fav.png" alt="图片alt" title="&#39;图片title&#39;"></p><p><a href="超链接地址" title="超链接title">超链接名</a></p><hr><p>其他功能说明：</p><p>reward: true<br>开通打赏功能<br>打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</p><p>toc: true<br>开通目录功能<br>目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;示例：这里是主标题&quot;&gt;&lt;a href=&quot;#示例：这里是主标题&quot; class=&quot;headerlink&quot; title=&quot;示例：这里是主标题&quot;&gt;&lt;/a&gt;示例：这里是主标题&lt;/h1&gt;&lt;h2 id=&quot;示例：这里是副标题&quot;&gt;&lt;a href=&quot;#示例：这里是副标题&quot; class=&quot;headerlink&quot; title=&quot;示例：这里是副标题&quot;&gt;&lt;/a&gt;示例：这里是副标题&lt;/h2&gt;&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;无序列表1&lt;/li&gt;
&lt;li&gt;无序列表2
    
    </summary>
    
    
      <category term="markdown" scheme="https://blog.skys.top/tags/markdown/"/>
    
      <category term="test" scheme="https://blog.skys.top/tags/test/"/>
    
      <category term="sample" scheme="https://blog.skys.top/tags/sample/"/>
    
      <category term="talk" scheme="https://blog.skys.top/tags/talk/"/>
    
  </entry>
  
  <entry>
    <title>SO逆向分析学习之指令学习</title>
    <link href="https://blog.skys.top/2018/02/04/so-learn/"/>
    <id>https://blog.skys.top/2018/02/04/so-learn/</id>
    <published>2018-02-04T07:37:05.000Z</published>
    <updated>2019-11-27T09:14:31.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础学习"><a href="#基础学习" class="headerlink" title="基础学习"></a>基础学习</h2><p>寄存器和基本指令学习<br><a id="more"></a></p><table><thead><tr><th style="text-align:center">寄存器</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center">R0</td><td style="text-align:center">工作寄存器</td></tr><tr><td style="text-align:center">R1</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R2</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R3</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R4</td><td style="text-align:center">必须保护</td></tr><tr><td style="text-align:center">R5</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R6</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R7</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R8</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R9</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R10</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">R11</td><td style="text-align:center">fp</td></tr><tr><td style="text-align:center">R12</td><td style="text-align:center">ip</td></tr><tr><td style="text-align:center">R13</td><td style="text-align:center">sp</td></tr><tr><td style="text-align:center">R14</td><td style="text-align:center">lr</td></tr><tr><td style="text-align:center">R15</td><td style="text-align:center">pc</td></tr><tr><td style="text-align:center">CPSR</td><td style="text-align:center">标志寄存器</td></tr></tbody></table><p><strong>MOV指令：移动，赋值</strong>  </p><p>mov r0,#100 r0=100;<br>mov r0,r1 r0=r1;<br>常数以#开头，默认10进制，16进制加前缀0x  </p><p><strong>ADD指令：相加</strong>  </p><p>add r0,r1,r2 r0=r1+r2;<br>add r0,r0,#5 r0=r0+5;<br>add r1,r1,r1 r1=r1+r1;  </p><p><strong>SUB指令：相减</strong>  </p><p>sub r0,r1,r2 r0=r1-r2;<br>sub r0,r1,#5 r0=r1-5;<br>sub r1,r1,r1 r1=r1-r1 r1=0;  </p><p><strong>寻址方式：</strong>  </p><p>立即寻址/寄存器寻址/寄存器移位寻址<br>移位指令：LSL/LSR/ASR/ROR/RRX  </p><p><strong>LSL:逻辑左移&lt;&lt;</strong>  </p><p>MOV r0,r1,LSL #2 r0=r1*2^2 即r0=r1*4 常用于数组寻址  </p><p><strong>LDR指令：读/加载</strong>  </p><p>LDR用于从储存器（内存）加载数据到寄存器。<br>LDR{type}{cond} Rd,label{!}<br>LDRD{cond} Rd,Rd2,label{!}  (一次加载双字（64位）)<br>{!} 是否将寻址结果写入寄存器中<br>type 取值:<br>B  无符号字节<br>SB 有符号字节<br>H 无符号半字<br>SH 有符号半字<br>label为内存地址  </p><p><strong>STR指令：写入</strong>  </p><p>寄存器间接寻址： ADD R0，R1，[R2] ；R0←R1＋[R2]<br>LDR R0，[R1] ；R0←[R1] r0=*r1  中括号相当于指针  </p><p><strong>基址变址寻址：</strong>  </p><p>基址变址寻址就是将寄存器（该寄存器一般称作基址寄存器）的内容与指令中给出的地址偏移量相加，从而得到一个操作数的有效地址：<br>LDR R0，[R1，＃4] ；R0←[R1＋4]  即R0=*(R1+4)<br>LDR R0，[R1，＃4]！ ；R0←[R1＋4]、R1←R1＋4<br>LDR R0，[R1] ，＃4 ；R0←[R1]、R1←R1＋4<br>LDR R0，[R1，R2] ；R0←[R1＋R2]  </p><p><strong>LDM指令：</strong>  </p><p>LDM指令是批量从内存加载数据到寄存器列表<br>LDM{addr_mode}{cond} Rn{!} reglist<br>addr_mode类型。用于数据的存储和读取有一下几种情况：<br>IA  每次传送后地址值加<br>IB  每次传送前地址值加<br>DA  每次传送后地址值减<br>DB  每次传送前地址值减<br>对于堆栈操作有如下几种情况：<br>FD  满递减堆栈<br>ED  空递减堆栈<br>FA  满递增堆栈<br>EA  满递增堆栈<br>stmfd  sp!, {fp, lr}<br>ldmfd  sp!, {fp, pc}  </p><p><strong>堆栈寻址：</strong>  </p><p>一般用于保存子程序现场。<br>STM与LDM成对出现<br>STMFD SP!,{R1-R7,LR}<br>… 函数代码<br>LDMFD SP!,{R1-R7,LR}<br> stmfd  sp!, {fp, lr}<br>….. 函数代码<br>ldmfd  sp!, {fp, pc}  </p><p><strong>跳转指令：</strong>  </p><p><em><strong>B 指令</strong></em>  </p><p>跳转指令也称为分支指令，它可以改变CPU的执行流程。<br>ARM中有两种方式可实现跳转  </p><ul><li>1、修改PC寄存器  </li><li>2、使用跳转指令<br>B指令格式: b{cond} label    </li></ul><p><em><strong>BL 指令</strong></em>  </p><p>带链接跳转，会将下条指令的地址保存到LR寄存器，并跳转到目标地址。<br>bl{cond} label<br>一般用于子程序(函数)调用。在子程序尾部可以用 MOV PC，LR来返回上层调用。  </p><p><em><strong>BX 指令</strong></em>  </p><p>带状态切换的跳转指令<br>格式: BX{cond} Rm<br>当满足{cond}条件时，处理器会检查Rm[0]是否为1，如果Rm[0]=1,则处理器自动将CPSR的T标志位置位，并将目标代码解释为Thumb指令集；<br>如果Rm[0] = 1,处理器将T标志位复位，并将目标代码解释为 ARM指令集<br>实例: .code 32 ADR R0,thumb1+1 BX  R0 .code 16 thumb1:    </p><p><em><strong>BLX指令</strong></em>  </p><p>BX 与 BL的结合体！<br>指令条件码 {cond} 表示条件码</p><table><thead><tr><th style="text-align:center">助记符</th><th style="text-align:center">标志</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">EQ</td><td style="text-align:center">Z=1</td><td style="text-align:center">相等</td></tr><tr><td style="text-align:center">NE</td><td style="text-align:center">Z=0</td><td style="text-align:center">不相等</td></tr><tr><td style="text-align:center">GE</td><td style="text-align:center">N=V</td><td style="text-align:center">有符号数大于或等于</td></tr><tr><td style="text-align:center">LT</td><td style="text-align:center">N!=V</td><td style="text-align:center">有符号数小于</td></tr><tr><td style="text-align:center">LE</td><td style="text-align:center">Z=1 , N!=V</td><td style="text-align:center">有符号数小于或等于</td></tr><tr><td style="text-align:center">GT</td><td style="text-align:center">Z=0,N!=V</td><td style="text-align:center">有符号数大于</td></tr></tbody></table><p>跳转指令举例：  </p><p>bne label<br>bge label<br>ble  label  </p><p><strong>CMP指令：</strong>  </p><p>cmp{cond} Rn,operand2<br>CMP指令将Rn寄存器的值减去operand2的值，并设置标志寄存器。相当于subs  Rn,operand2<br>e.g. cmp r0,0 判断r0的值是否为0   </p><p><opcode>{cond}{S}{.W|.N} <rd>,<rn>{,operand2}  </rn></rd></opcode></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础学习&quot;&gt;&lt;a href=&quot;#基础学习&quot; class=&quot;headerlink&quot; title=&quot;基础学习&quot;&gt;&lt;/a&gt;基础学习&lt;/h2&gt;&lt;p&gt;寄存器和基本指令学习&lt;br&gt;
    
    </summary>
    
    
      <category term="so逆向" scheme="https://blog.skys.top/tags/so%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>《活着》</title>
    <link href="https://blog.skys.top/2018/01/27/ys-huozhe/"/>
    <id>https://blog.skys.top/2018/01/27/ys-huozhe/</id>
    <published>2018-01-26T16:20:52.000Z</published>
    <updated>2019-11-27T09:14:31.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/4CBA390E16204BD4DEA4FD6377804399" alt=""></h2><p>福贵（葛优饰）是一个嗜赌如命的纨绔子弟，把家底儿全输光了，老爹也气死了 ，怀孕的妻子家珍（巩俐饰）带着女儿凤霞离家出走，一年之后又带着新生的儿子有庆回来了。福贵从此洗心革面，和同村的春生一起操起了皮影戏的营生，却被国民党军队拉了壮丁，后来又糊里糊涂的当了共产党的俘虏。他们约定，一定要活着回去。历尽千辛万苦，终于平安回到家中，母亲却已去逝，女儿凤霞也因生病变哑了。 一家人继续过着清贫而又幸福的日子。在“大跃进”中当上区长的春生不慎开车撞死了有庆，一家人伤痛欲绝，家珍更是不能原谅春生（郭涛饰），文革时，春生遭到迫害，妻子自杀，一天半夜他来到福贵家，把毕生积蓄交给福贵，说他也不想活了。这时家珍走出来让春生到屋里坐。春生临走时，家珍嘱咐他好好的活着。 后来凤霞认识了忠厚老实的二喜，两人喜结良缘。然而不幸总是不肯放过福贵一家。不久凤霞生下一子，自己却因难产而死。凤霞的儿子取名叫馒头，聪明可爱。最后，福贵说馒头赶上好时候了，将来这日子会越来越好。<br><a href="http://www.letv.com/ptv/vplay/20053322.html" target="_blank" rel="noopener">http://www.letv.com/ptv/vplay/20053322.html</a>  </p><blockquote><p>人活着都不容易。<br>旧社会时期真的是多灾多难，抗战革命，大跃进。<br>兴，百姓苦；亡，百姓苦。活到最后的人，往往最痛苦。<br>同类型的霸王别姬也是反应了当时的辛酸，文革真是罪恶。<br>人的一生总是多灾多难，活在当代真是庆幸。<br>背景音乐那个调子 真是悲伤</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/4CBA390E16204BD4DEA4FD6377804399&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;福贵（葛优饰）是一个嗜赌
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="经典影视" scheme="https://blog.skys.top/tags/%E7%BB%8F%E5%85%B8%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>《寻梦环游记》</title>
    <link href="https://blog.skys.top/2018/01/07/ys-xunmenghuanyou/"/>
    <id>https://blog.skys.top/2018/01/07/ys-xunmenghuanyou/</id>
    <published>2018-01-06T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/9F8AF2F3849DBFD56D52A169BBE10FE5" alt=""></h2><p>《寻梦环游记》是皮克斯动画工作室的第19部动画长片，由华特·迪士尼电影工作室、皮克斯动画工作室联合出品，李·昂克里奇、阿德里安.莫利纳执导，安东尼·冈萨雷斯、本杰明·布拉特、盖尔·加西亚·贝纳尔、蕾妮·维克多等参与配音。该片的灵感源于墨西哥亡灵节，讲述了热爱音乐的小男孩米格和落魄乐手埃克托在五彩斑斓的神秘世界开启了一段奇妙冒险旅程的故事。  </p><blockquote><p>最后奶奶想起来 唱歌的那幕还是蛮感人的。<br>人有三次死亡。第一次是生物学的死亡；第二次是社会宣布你死亡；第三次是最后一个记得你的人离开这个世界。<br>一个关于爱 关于团圆的故事。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/9F8AF2F3849DBFD56D52A169BBE10FE5&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;《寻梦环游记》是皮克斯动
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="观影分享" scheme="https://blog.skys.top/tags/%E8%A7%82%E5%BD%B1%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>Charles抓手机流量包</title>
    <link href="https://blog.skys.top/2018/01/04/charles/"/>
    <id>https://blog.skys.top/2018/01/04/charles/</id>
    <published>2018-01-04T15:07:07.000Z</published>
    <updated>2019-11-27T09:14:31.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改微信跳一跳分数"><a href="#修改微信跳一跳分数" class="headerlink" title="修改微信跳一跳分数"></a>修改微信跳一跳分数</h2><p>最近新出不久的微信跳一跳相当火，在尝试过Android的全自动跳的脚本之后，无聊看到有通过post数据修改小程序分数的方法，特此尝试下。<br>电脑安装charles，安装后启动后如下图：  </p><p><img src="/img/img_files/6D66D2022D5B9977E9AC338062C4A864" alt=""></p><p>手机连接wifi，手动设置http代理，服务器填同局域网的电脑ip，端口8888。填好存储后，电脑端会弹出是否允许，点击allow。<br><a id="more"></a><br>同意后pc端start recording，电脑端即可以查看手机端网络访问情况，但是有一个问题就是有部分数据是https，不能得到具体内容信息。<br>至此，抓https流量数据包需要导入本地证书。主要操作方式如下：<br>以iPhone为例，使用自带浏览器访问chls.pro/ssl，访问后如下如：  </p><p><img src="/img/img_files/6D2DABFF148A73F986A2C9050504D1C4" alt=""></p><p>安装描述性文件，点击安装，安装后还需在手机的“关于本机”页面，证书信任设置中设置完全信任，如下图:</p><p><img src="/img/img_files/C43D1085F9A6ED77552B9CE14F450025" alt=""></p><p> 至此，手机端设置完毕。 还有最后一步，需要在pc端 charles 代理设置 SSL代理设置中，启用ssl代理，设置要抓包的主机和端口号，端口号443.如下图：</p><p><img src="/img/img_files/B3D34CC8F73322C8B8D9A16B6F4544EF" alt=""></p><p>上图添加的即是抓取微信相关https流量包。 点击ok，大功告成。<br>比如小程序的分数情况，在抓包当中可以明显看到，至于后续的修改post，后续再补充。  </p><blockquote><p>根据网络上的说法，10.3之前的系统，抓包时不用设置完全信任。</p></blockquote><p> 参考链接：<br> <a href="https://www.jianshu.com/p/5539599c7a25" target="_blank" rel="noopener">https://www.jianshu.com/p/5539599c7a25</a><br> <a href="https://www.v2ex.com/t/419056" target="_blank" rel="noopener">https://www.v2ex.com/t/419056</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;修改微信跳一跳分数&quot;&gt;&lt;a href=&quot;#修改微信跳一跳分数&quot; class=&quot;headerlink&quot; title=&quot;修改微信跳一跳分数&quot;&gt;&lt;/a&gt;修改微信跳一跳分数&lt;/h2&gt;&lt;p&gt;最近新出不久的微信跳一跳相当火，在尝试过Android的全自动跳的脚本之后，无聊看到有通过post数据修改小程序分数的方法，特此尝试下。&lt;br&gt;电脑安装charles，安装后启动后如下图：  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/img_files/6D66D2022D5B9977E9AC338062C4A864&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;手机连接wifi，手动设置http代理，服务器填同局域网的电脑ip，端口8888。填好存储后，电脑端会弹出是否允许，点击allow。&lt;br&gt;
    
    </summary>
    
    
      <category term="Charles" scheme="https://blog.skys.top/tags/Charles/"/>
    
      <category term="流量" scheme="https://blog.skys.top/tags/%E6%B5%81%E9%87%8F/"/>
    
      <category term="抓包" scheme="https://blog.skys.top/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>移动威胁情报样本收集（持续更新）</title>
    <link href="https://blog.skys.top/2018/01/03/mobile-samples/"/>
    <id>https://blog.skys.top/2018/01/03/mobile-samples/</id>
    <published>2018-01-02T16:00:00.000Z</published>
    <updated>2019-11-27T09:14:31.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基于公开信息收集样本情报等"><a href="#基于公开信息收集样本情报等" class="headerlink" title="基于公开信息收集样本情报等"></a>基于公开信息收集样本情报等</h2><p>移动端，安卓样本收集记录更新，主要来源为国内外安全厂商blog以及各安全资讯网站。<br>典型的如趋势trendmicro、Check Point、DrWeb、Kaspersky Securelist等等<br><a id="more"></a></p><p><div style="display: none">2018-01-03<details><summary>折叠标题Title</summary><br>被折叠内容content!!!<br></details><br></div><br>2019-07-08</p><p><details><summary>借贷软件变脸绕过应用市场审核</summary><br><a href="https://www.anquanke.com/post/id/181626" target="_blank" rel="noopener">https://www.anquanke.com/post/id/181626</a><br>未提供具体的样本hash<br>相关url：<br>123.57.228.16/Android/Status/My/BaiDu/DuGan.json<br>123.57.228.16/Android/Status/H5/Baidu/DuGan.json</details></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>2019-07-04</p><p><details><summary>伪装三星固件升级app</summary><br><a href="https://www.zdnet.com/article/fake-samsung-firmware-update-app-tricks-more-than-10-million-android-users" target="_blank" rel="noopener">https://www.zdnet.com/article/fake-samsung-firmware-update-app-tricks-more-than-10-million-android-users</a><br><a href="https://play.google.com/store/apps/details?id=samsungupdate.com" target="_blank" rel="noopener">https://play.google.com/store/apps/details?id=samsungupdate.com</a></details></p><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><p>2019-07-03</p><p><details><summary>Donot团伙（APT-C-35）移动端新攻击框架工具分析</summary><br><a href="https://www.anquanke.com/post/id/181483" target="_blank" rel="noopener">https://www.anquanke.com/post/id/181483</a><br>IOC<br>MD5：<br>7BB0B6EB3383BE5CEC4B2EABF273C7F9<br>103CFBC4F61DD642F9F44B8248545831<br>1278A5F65FC0C4A3BABFFCF1117DB1C0<br>C&amp;C:<br>whynotworkonit.top<br>genwar.drivethrough.top<br>151.236.11.222:50240</details></p><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><p>2019-07-01</p><p><details><summary>HiddenAd Google Play中发现上百个伪装为游戏和拍照APP的广告恶意软件</summary><br> <a href="https://blog.trendmicro.com/trendlabs-security-intelligence/adware-campaign-identified-from-182-game-and-camera-apps-on-google-play-and-third-party-stores-like-9apps/" target="_blank" rel="noopener">https://blog.trendmicro.com/trendlabs-security-intelligence/adware-campaign-identified-from-182-game-and-camera-apps-on-google-play-and-third-party-stores-like-9apps/</a><br> <a href="https://www.4hou.com/info/news/18924.html" target="_blank" rel="noopener">https://www.4hou.com/info/news/18924.html</a><br> 趋势报毒AndroidOS_HiddenAd.GCLA和AndroidOS_HiddenAd.HRXAA<br> <a href="https://documents.trendmicro.com/assets/Appendix_AdwareCampaignIdentifiedFrom182GameandCameraAppsonGooglePlayandThird-PartyStoresLike9Apps.pdf" target="_blank" rel="noopener">更多样本获取链接</a><br> hash列表：<br> 1A98CF6BDB221E3122533B9CE107E91A<br> 80A77BD3903D8CD1C32FA652F27AC562<br> 789B61CA280C287E00E5952A9BE5DAA6<br> 303837B32B7961769B143950ED31DF9B<br> CB421E3662E806A7951CE7FEDAA284AC<br> F7ACF36CBFED21DE924FCDC9B57E372B<br> 8A0853099D2E38E7EBAE79B63568136F<br> 57D8AC63ED46DB1E0BC88B144DAEBC2E<br> 39AA4807A057CC1DA0B3D27572E75688<br> AB4D546F85A0457735D688A8213F4782<br> 6E4FD3C842A549B18724D10C95E1D5FD<br> B2071C9650510CE6C46BA32E9C362A93<br> 51A0C17A28C817A474741047506A9718<br> A1A9B7CDF7059C5918E45212C62ED0B3<br> 355825634E45B172BEB5B7CEED2A4E60<br> 3AEA42F18F3F0DB0401590B2B2BC2648<br> 2F0CB9BCA730B79C9E6B3AFF00FF1144<br> 34FA63C0619E4AD6EA2A1A722AE09906<br> FAF1F09C811F99F9C71A1C6315CFDF5C<br> F8E6ADC94685D8ECA0984459EF817FD3</details></p><h2 id="-3"><a href="#-3" class="headerlink" title=""></a></h2><p>2019-06-20</p><p><details><summary>Not-so-dear subscribers</summary><br> <a href="https://securelist.com/mobile-subscriptions/91211/" target="_blank" rel="noopener">https://securelist.com/mobile-subscriptions/91211/</a><br> <a href="https://threatpost.com/mobok-malware-google-photo-editor/145932/" target="_blank" rel="noopener">https://threatpost.com/mobok-malware-google-photo-editor/145932/</a><br> IOCs<br> SHA256<br> 7F5C5A5F57650A44C10948926E107BA9E69B98D1CD1AD47AF0696B6CCCC08D13<br> E706EB74BAD44D2AF4DAA0C07E4D4FD8FFC2FC165B50ED34C7A25565E310C33B<br> 796A72004FAE62C43B1F02AA1ED48139DA7975B0BB416708BA8271573C462E79<br> C5CA6AA73FDCB523B5E63B52197F134F229792046CBAC525D46985AD72880395<br> B9038DC32DE0EA3619631B54585C247ECFD304B72532E193DED722084C4A7D1C<br> D4406DEE2C0E3E38A851CEA6FD5C4283E98497A894CA14A58B27D33A89B5ED5F<br> 59D64FBFF1E5A9AC1F8E29660ED9A76E5546CA07C2FF99FE56242FA43B5ABEC3<br> C5B6146D7C126774E5BB299E732F10655139056B72C28AA7AD478BD876D0537E<br> C&amp;C<br> ps.okyesmobi[.]com:8802</details></p><h2 id="-4"><a href="#-4" class="headerlink" title=""></a></h2><p>2019-06-13</p><p><details><summary>Android.FakeApp.174</summary><br> <a href="https://vms.drweb.cn/virus/?i=17835449" target="_blank" rel="noopener">https://vms.drweb.cn/virus/?i=17835449</a><br> SHA1:<br> f4a196c5f1e2ff80ca7a60c9c3f97ea6c32e2e6f<br> 28391d1db5723f3f97312b98475ad4a41d85fe4a</details></p><h2 id="-5"><a href="#-5" class="headerlink" title=""></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基于公开信息收集样本情报等&quot;&gt;&lt;a href=&quot;#基于公开信息收集样本情报等&quot; class=&quot;headerlink&quot; title=&quot;基于公开信息收集样本情报等&quot;&gt;&lt;/a&gt;基于公开信息收集样本情报等&lt;/h2&gt;&lt;p&gt;移动端，安卓样本收集记录更新，主要来源为国内外安全厂商blog以及各安全资讯网站。&lt;br&gt;典型的如趋势trendmicro、Check Point、DrWeb、Kaspersky Securelist等等&lt;br&gt;
    
    </summary>
    
    
      <category term="threat" scheme="https://blog.skys.top/tags/threat/"/>
    
      <category term="samples" scheme="https://blog.skys.top/tags/samples/"/>
    
      <category term="mobile" scheme="https://blog.skys.top/tags/mobile/"/>
    
      <category term="移动安全" scheme="https://blog.skys.top/tags/%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>《V字仇杀队》</title>
    <link href="https://blog.skys.top/2018/01/02/ys-vzichoushadui/"/>
    <id>https://blog.skys.top/2018/01/02/ys-vzichoushadui/</id>
    <published>2018-01-01T16:56:29.000Z</published>
    <updated>2019-11-27T09:14:31.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/3E9F799FAFEB2D014FE2D22A6FC528F4" alt=""></h2><p>影片讲述的故事发生在虚拟的未来世界，那时的英国变成了一个由独裁者萨特勒（约翰·赫特饰）所统治的法西斯极权主义国家，人民生活方在残暴的统治下，疾病、饥荒、灰暗，且秘密警察无处不在。在这里，外国人、同性恋者和反对人士都会被抓入集中营处死。海报艾维（娜塔莉·波特曼饰）是生活在这个国度的一个柔软的少女，一次她不幸落入了政府爪牙的魔爪，就在生死危急的关头，一个头带一张露齿而笑的面具，身披斗蓬的神秘怪人（雨果·维文饰）将她拯救了出来，临走时这个神秘怪人告诉艾维他叫作“V”。不久，艾维又被抓进了集中营，看守剃光了她的头发，对她百般凌辱。而这一次，神秘怪人“V”再次适时而出，将艾维救出了火坑。“V”告诉艾维，自己是一个用极端暴力手段对抗政府的所谓“斗士”，目前正在策划一个计划，他准备效仿1605年的盖伊·福克斯，1605年，盖伊·福克斯和同伴在国会大厦下面埋了36桶炸药企图将当时的残酷的独裁政权轰掉，但计划败露，被英王詹姆斯一世于当年11月5日绞死。而他所带的面具就是英国人一眼就能认出了盖伊·福克斯。艾维被这个具有不可思议的战斗能力，诡计多端且手段极其残忍的“V”所吸引，决定加入“V”的行列，和V一起组成了“V字仇杀队”。“V”的计划在顺利进行，他在一连炸毁了伦敦两处标志性建筑后，夺取了政府控制的广播电台。他煽动市民进行起义，并呼吁大家在11月5日那天和他一起将国会大厦炸毁。 </p><blockquote><p>匿名者</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/3E9F799FAFEB2D014FE2D22A6FC528F4&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;影片讲述的故事发生在虚拟
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="经典影视" scheme="https://blog.skys.top/tags/%E7%BB%8F%E5%85%B8%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>《初恋这件小事》</title>
    <link href="https://blog.skys.top/2018/01/01/ys-chulian/"/>
    <id>https://blog.skys.top/2018/01/01/ys-chulian/</id>
    <published>2017-12-31T18:03:56.000Z</published>
    <updated>2019-11-27T09:14:31.769Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/9EFEFCA851CF01DF27F663A09F8BCB17" alt=""></h2><p>《初恋这件小事》是泰国青春爱情喜剧电影，2010年8月在泰国上映。该片由Puttipong Promsaka Na Sakolnakorn和Wasin pokpong合作导演。由Mario Maurer（马里奥·毛瑞尔）、Pimchanok Leuwisetpaibul（平采娜·乐维瑟派布恩）、Tukkie等人主演。电影讲述的是长相平凡、家境平平的初中生小水（平采娜饰），因喜欢上帅气的学长阿亮（马里奥·毛瑞尔饰），人生从此发生天翻地覆的变化的故事。《初恋这种小事》也就是我们生活中的真实。<br><a href="http://www.iqiyi.com/v_19rrjajrzs.html" target="_blank" rel="noopener">http://www.iqiyi.com/v_19rrjajrzs.html</a></p><blockquote><p>丑小鸭改变自己变天鹅。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/9EFEFCA851CF01DF27F663A09F8BCB17&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;《初恋这件小事》是泰国青
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="经典影视" scheme="https://blog.skys.top/tags/%E7%BB%8F%E5%85%B8%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>《让子弹飞》</title>
    <link href="https://blog.skys.top/2018/01/01/ys-langzidanfei/"/>
    <id>https://blog.skys.top/2018/01/01/ys-langzidanfei/</id>
    <published>2017-12-31T17:24:39.000Z</published>
    <updated>2019-11-27T09:14:31.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/DA31CC81874DACAA7E1ADC0A5738C9C3" alt=""></h2><p>《让子弹飞》是2010年上映的一部电影，本片是姜文导演的第四部电影作品，马珂为制片人，主要演员有姜文、周润发、葛优、刘嘉玲和陈坤等。该片讲述了北洋年间，南部中国。一场惊天动地的的火车劫案之后，号令山林的绿林悍匪张牧之，遭遇行走江湖的通天大骗老汤，两人从生死宿敌变成莫逆之交，然而真正的决战才刚刚开始，南国一霸黄四郎虎视眈眈镇守鹅城，一场场情杀命案连环上演，华南三王各自为阵，鹅城双艳粉墨登场，乱世枭雄的混战一触即发。<br><a href="http://www.iqiyi.com/v_19rrjc7kag.html" target="_blank" rel="noopener">http://www.iqiyi.com/v_19rrjc7kag.html</a>  </p><blockquote><p>姜文比较好的个电影。赞！</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/DA31CC81874DACAA7E1ADC0A5738C9C3&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;《让子弹飞》是2010年
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="经典影视" scheme="https://blog.skys.top/tags/%E7%BB%8F%E5%85%B8%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>《四月是你的谎言》</title>
    <link href="https://blog.skys.top/2018/01/01/ys-siyue/"/>
    <id>https://blog.skys.top/2018/01/01/ys-siyue/</id>
    <published>2017-12-31T17:20:09.000Z</published>
    <updated>2019-11-27T09:14:31.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/BF54AB95CC45BB028B2C65A41396B518" alt=""></h2><p>有马公生原本是音乐界的天才少年，但在11岁时的秋天、因母亲过世后就变得无法弹奏钢琴。对于毫无目标的他来说，日常的生活就像是单调、没有颜色的乐谱。不过，在14岁的春天，公生遇到了一位少女——宫园薰。她的举止粗暴、个性差劲…却是一位才华洋溢的小提琴家，她的出现改变了公生的灰色世界 。自此，公生的心境与日常生活开始有了改变。<br><a href="http://www.iqiyi.com/v_19rrn5h8bw.html" target="_blank" rel="noopener">http://www.iqiyi.com/v_19rrn5h8bw.html</a>  </p><blockquote><p>推荐，多次感动到流泪。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/BF54AB95CC45BB028B2C65A41396B518&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;有马公生原本是音乐界的天
      
    
    </summary>
    
    
      <category term="动漫" scheme="https://blog.skys.top/tags/%E5%8A%A8%E6%BC%AB/"/>
    
      <category term="动漫分享" scheme="https://blog.skys.top/tags/%E5%8A%A8%E6%BC%AB%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>《芳华》</title>
    <link href="https://blog.skys.top/2018/01/01/ys-fanghua/"/>
    <id>https://blog.skys.top/2018/01/01/ys-fanghua/</id>
    <published>2017-12-31T16:53:11.000Z</published>
    <updated>2019-11-27T09:14:31.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/C1ECB89B55C3C635962FF55739064E40" alt=""></h2><p>没有被善待的人，最容易识别善良，也最珍惜善良。” 适合带长辈们看，或许多少年后，就没人再拍这样的电影了…后面半小时泪弹太足，我们在最好的年代虚度光阴，他们在最坏的年代洗尽铅华。<br><a href="http://www.iqiyi.com/v_19rr7pe5k4.html" target="_blank" rel="noopener">http://www.iqiyi.com/v_19rr7pe5k4.html</a>  </p><blockquote><p>还算可以 可能更适合老一辈的看。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/C1ECB89B55C3C635962FF55739064E40&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;没有被善待的人，最容易识
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="观影分享" scheme="https://blog.skys.top/tags/%E8%A7%82%E5%BD%B1%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>《楚门的世界》</title>
    <link href="https://blog.skys.top/2017/12/30/ys-chumen/"/>
    <id>https://blog.skys.top/2017/12/30/ys-chumen/</id>
    <published>2017-12-30T13:45:26.000Z</published>
    <updated>2019-11-27T09:14:31.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/A5AEFEF564F67D6A28E4DBA150B46141" alt=""></h2><p>30年前奥姆尼康电视制作公司收养了一名婴儿，他们刻意培养他使其成为全球最受欢迎的纪实性肥皂剧《楚门的世界》中的主人公，公司为此取得了巨大的成功。然而这一切却只有一人全然不知，他就是该剧的唯一主角——楚门。楚门从小到大一直生活在一座叫桃源岛的小城（实际上是一座巨大的摄影棚），他是这座小城里的一家保险公司的经纪人，楚门看上去似乎过着与常人完全相同的生活，但他却不知道生活中的每一秒钟都有上千部摄像机在对着他，每时每刻全世界都在注视着他，更不知道身边包括妻子和朋友在内的所有人都是《楚门的世界》的演员。<br><a href="http://www.iqiyi.com/v_19rrk3u9wg.html#vfrm=2-4-0-1" target="_blank" rel="noopener">http://www.iqiyi.com/v_19rrk3u9wg.html#vfrm=2-4-0-1</a>  </p><blockquote><p>自己所在的世界，是不是也是truman所在的世界。<br>每个人都向往自由而不仅仅是安定。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/A5AEFEF564F67D6A28E4DBA150B46141&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;30年前奥姆尼康电视制作
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="经典影视" scheme="https://blog.skys.top/tags/%E7%BB%8F%E5%85%B8%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>《肖申克的救赎》</title>
    <link href="https://blog.skys.top/2017/12/30/ys-xiaoshenke/"/>
    <id>https://blog.skys.top/2017/12/30/ys-xiaoshenke/</id>
    <published>2017-12-30T13:37:38.000Z</published>
    <updated>2019-11-27T09:14:31.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><img src="/img/img_files/D47F33E4E1BE32C5FA06C7EA3B9E5EA7" alt=""></h2><p>故事发生在1947年，银行家安迪（Andy）被指控枪杀了妻子及其情人， 安迪被判无期徒刑，这意味着他将在肖恩克监狱中渡过余生。瑞德（Red）1927年因谋杀罪被判无期徙刑，数次假释都未获成功。他成为了肖恩克监狱中的“权威人物”，只要你付得起钱，他几乎有办法搞到任何你想要的东西：香烟、糖果、酒，甚至是大麻。每当有新囚犯来的时候，大家就赌谁会在第一个夜晚哭泣。瑞德认为弱不禁风、书生气时足的安迪一定会哭，结果安迪的沉默使他输掉了两包烟。但同时也使瑞德对他另眼相看。好长时间以来，安迪不和任何人接触，在大家报怨的同时，他在院子里很悠闲地散步，就像在公园里一样。一个月后，安迪请瑞德帮他搞的第一件东西是一把小的鹤嘴锄，他的解释是他想雕刻一些小东西以消磨时光，并说他自己想办法逃过狱方的例行检查。不久，瑞德就玩上了安迪刻的国际象棋。之后，安迪又搞了一幅影星丽塔·海华丝的巨幅海报贴在了牢房的墙上。<br><a href="http://www.iqiyi.com/v_19rra0h3wg.html#vfrm=2-4-0-1" target="_blank" rel="noopener">http://www.iqiyi.com/v_19rra0h3wg.html#vfrm=2-4-0-1</a>  </p><blockquote><p>经典电影，确实不错啊，很多经典台词……<br>Get busy living, Or get busy dying.<br>类似的剧还有越狱 总共好像是有5季来着 也蛮好看的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;img src=&quot;/img/img_files/D47F33E4E1BE32C5FA06C7EA3B9E5EA7&quot; alt=&quot;&quot;&gt;&lt;/h2&gt;&lt;p&gt;故事发生在1947年，银
      
    
    </summary>
    
    
      <category term="电影" scheme="https://blog.skys.top/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="经典影视" scheme="https://blog.skys.top/tags/%E7%BB%8F%E5%85%B8%E5%BD%B1%E8%A7%86/"/>
    
  </entry>
  
  <entry>
    <title>千里之行始于足下</title>
    <link href="https://blog.skys.top/2017/12/30/hello-world/"/>
    <id>https://blog.skys.top/2017/12/30/hello-world/</id>
    <published>2017-12-30T03:58:48.000Z</published>
    <updated>2019-11-27T09:14:31.764Z</updated>
    
    <content type="html"><![CDATA[<p>系统自动生成的第一篇文章修改而来，代表着一个新的起点，新的征程。 GO GO GO！！！  </p><blockquote><p>再见2017，展望2018！</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;系统自动生成的第一篇文章修改而来，代表着一个新的起点，新的征程。 GO GO GO！！！  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;再见2017，展望2018！&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
    
      <category term="未分类" scheme="https://blog.skys.top/tags/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
      <category term="起点" scheme="https://blog.skys.top/tags/%E8%B5%B7%E7%82%B9/"/>
    
  </entry>
  
</feed>
